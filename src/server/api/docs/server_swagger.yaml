basePath: /
definitions:
  echo.Map:
    additionalProperties: true
    type: object
  errors.Error:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  model.PlanType:
    enum:
    - MONTHLY
    - ANUAL
    type: string
    x-enum-varnames:
    - PlanTypeMonthly
    - PlanTypeAnual
  schemas.ActionStat:
    properties:
      action:
        type: string
      count:
        type: integer
    type: object
  schemas.AuditActionType:
    enum:
    - CREATE
    - UPDATE
    - DELETE
    - BULK_CREATE
    - BULK_DELETE
    - LOGIN
    - LOGOUT
    - REGISTER
    - SUBSCRIBE
    - UNSUBSCRIBE
    - CREATE_RESERVATION
    - CANCEL_RESERVATION
    - UPDATE_PROFILE
    type: string
    x-enum-varnames:
    - AuditActionCreate
    - AuditActionUpdate
    - AuditActionDelete
    - AuditActionBulkCreate
    - AuditActionBulkDelete
    - AuditActionLogin
    - AuditActionLogout
    - AuditActionRegister
    - AuditActionSubscribe
    - AuditActionUnsubscribe
    - AuditActionCreateReservation
    - AuditActionCancelReservation
    - AuditActionUpdateProfile
  schemas.AuditEntityType:
    enum:
    - USER
    - COMMUNITY
    - PROFESSIONAL
    - LOCAL
    - PLAN
    - SERVICE
    - SESSION
    - RESERVATION
    - MEMBERSHIP
    - ONBOARDING
    - COMMUNITY_PLAN
    - COMMUNITY_SERVICE
    - SERVICE_LOCAL
    - SERVICE_PROFESSIONAL
    type: string
    x-enum-varnames:
    - AuditEntityUser
    - AuditEntityCommunity
    - AuditEntityProfessional
    - AuditEntityLocal
    - AuditEntityPlan
    - AuditEntityService
    - AuditEntitySession
    - AuditEntityReservation
    - AuditEntityMembership
    - AuditEntityOnboarding
    - AuditEntityCommunityPlan
    - AuditEntityCommunityService
    - AuditEntityServiceLocal
    - AuditEntityServiceProfessional
  schemas.AuditLog:
    properties:
      action:
        $ref: '#/definitions/schemas.AuditActionType'
      additional_info:
        type: string
      created_at:
        type: string
      entity_id:
        type: string
      entity_name:
        type: string
      entity_type:
        $ref: '#/definitions/schemas.AuditEntityType'
      error_message:
        type: string
      id:
        type: string
      ip_address:
        type: string
      new_values:
        type: string
      old_values:
        type: string
      success:
        type: boolean
      user:
        $ref: '#/definitions/schemas.UserProfile'
      user_agent:
        type: string
      user_email:
        type: string
      user_id:
        type: string
      user_role:
        $ref: '#/definitions/schemas.UserRol'
    type: object
  schemas.AuditLogs:
    properties:
      audit_logs:
        items:
          $ref: '#/definitions/schemas.AuditLog'
        type: array
      page:
        type: integer
      page_size:
        type: integer
      total_count:
        type: integer
      total_pages:
        type: integer
    type: object
  schemas.AuditStats:
    properties:
      actions:
        items:
          $ref: '#/definitions/schemas.ActionStat'
        type: array
      active_users:
        type: integer
      entity_types:
        items:
          $ref: '#/definitions/schemas.EntityTypeStat'
        type: array
      failure_count:
        type: integer
      success_count:
        type: integer
      total_events:
        type: integer
      user_roles:
        items:
          $ref: '#/definitions/schemas.UserRoleStat'
        type: array
    type: object
  schemas.AvailabilityRequest:
    properties:
      date:
        type: string
      local_id:
        type: string
      professional_id:
        type: string
    type: object
  schemas.AvailabilityResult:
    properties:
      busy_slots:
        items:
          $ref: '#/definitions/schemas.TimeSlot'
        type: array
      is_available:
        type: boolean
    type: object
  schemas.BatchCreateCommunityPlanRequest:
    properties:
      community_plans:
        items:
          $ref: '#/definitions/schemas.CreateCommunityPlanRequest'
        type: array
    type: object
  schemas.BatchCreateCommunityRequest:
    properties:
      communities:
        items:
          $ref: '#/definitions/schemas.CreateCommunityRequest'
        type: array
    type: object
  schemas.BatchCreateCommunityServiceRequest:
    properties:
      community_services:
        items:
          $ref: '#/definitions/schemas.CreateCommunityServiceRequest'
        type: array
    type: object
  schemas.BatchCreateLocalRequest:
    properties:
      locals:
        items:
          $ref: '#/definitions/schemas.CreateLocalRequest'
        type: array
    type: object
  schemas.BatchCreateServiceLocalRequest:
    properties:
      service_locals:
        items:
          $ref: '#/definitions/schemas.CreateServiceLocalRequest'
        type: array
    type: object
  schemas.BatchCreateServiceProfessionalRequest:
    properties:
      service_professionals:
        items:
          $ref: '#/definitions/schemas.CreateServiceProfessionalRequest'
        type: array
    type: object
  schemas.BatchCreateSessionRequest:
    properties:
      sessions:
        items:
          $ref: '#/definitions/schemas.CreateSessionRequest'
        type: array
    type: object
  schemas.BulkCreatePlanRequest:
    properties:
      plans:
        items:
          $ref: '#/definitions/schemas.CreatePlanRequest'
        type: array
    type: object
  schemas.BulkCreateProfessionalRequest:
    properties:
      professionals:
        items:
          $ref: '#/definitions/schemas.CreateProfessionalRequest'
        type: array
    type: object
  schemas.BulkCreateUserRequest:
    properties:
      users:
        items:
          $ref: '#/definitions/schemas.CreateUserRequest'
        type: array
    type: object
  schemas.BulkDeleteCommunityPlanRequest:
    properties:
      community_plans:
        items:
          $ref: '#/definitions/schemas.DeleteCommunityPlanRequest'
        type: array
    type: object
  schemas.BulkDeleteCommunityRequest:
    properties:
      communities:
        items:
          type: string
        type: array
    type: object
  schemas.BulkDeleteCommunityServiceRequest:
    properties:
      community_services:
        items:
          $ref: '#/definitions/schemas.DeleteCommunityServiceRequest'
        type: array
    type: object
  schemas.BulkDeleteLocalRequest:
    properties:
      locals:
        items:
          type: string
        type: array
    type: object
  schemas.BulkDeletePlanRequest:
    properties:
      plans:
        items:
          type: string
        type: array
    type: object
  schemas.BulkDeleteProfessionalRequest:
    properties:
      professionals:
        items:
          type: string
        type: array
    type: object
  schemas.BulkDeleteReservationRequest:
    properties:
      reservations:
        items:
          type: string
        type: array
    type: object
  schemas.BulkDeleteServiceLocalRequest:
    properties:
      service_locals:
        items:
          $ref: '#/definitions/schemas.DeleteServiceLocalRequest'
        type: array
    type: object
  schemas.BulkDeleteServiceProfessionalRequest:
    properties:
      service_professionals:
        items:
          $ref: '#/definitions/schemas.DeleteServiceProfessionalRequest'
        type: array
    type: object
  schemas.BulkDeleteServiceRequest:
    properties:
      services:
        items:
          type: string
        type: array
    type: object
  schemas.BulkDeleteSessionRequest:
    properties:
      sessions:
        items:
          type: string
        type: array
    type: object
  schemas.BulkDeleteUserRequest:
    properties:
      users:
        items:
          type: string
        type: array
    type: object
  schemas.ChangePasswordInput:
    properties:
      email:
        type: string
      new_password:
        type: string
    required:
    - email
    - new_password
    type: object
  schemas.ChangeUserRoleRequest:
    properties:
      rol:
        $ref: '#/definitions/schemas.UserRol'
    type: object
  schemas.CheckConflictRequest:
    properties:
      community_service_id:
        type: string
      date:
        type: string
      end_time:
        type: string
      exclude_id:
        type: string
      local_id:
        type: string
      professional_id:
        type: string
      start_time:
        type: string
    type: object
  schemas.CheckUserExistsResponse:
    properties:
      email:
        type: string
      exists:
        type: boolean
    type: object
  schemas.Communities:
    properties:
      communities:
        items:
          $ref: '#/definitions/schemas.Community'
        type: array
    type: object
  schemas.Community:
    properties:
      id:
        type: string
      image_url:
        type: string
      name:
        type: string
      number_subscriptions:
        type: integer
      purpose:
        type: string
    type: object
  schemas.CommunityPlan:
    properties:
      community_id:
        type: string
      id:
        type: string
      plan_id:
        type: string
    type: object
  schemas.CommunityPlans:
    properties:
      community_plans:
        items:
          $ref: '#/definitions/schemas.CommunityPlan'
        type: array
    type: object
  schemas.CommunityService:
    properties:
      community_id:
        type: string
      id:
        type: string
      service_id:
        type: string
    type: object
  schemas.CommunityServices:
    properties:
      community_services:
        items:
          $ref: '#/definitions/schemas.CommunityService'
        type: array
    type: object
  schemas.CommunityWithImage:
    properties:
      id:
        type: string
      image_bytes:
        items:
          type: integer
        type: array
      image_url:
        type: string
      name:
        type: string
      number_subscriptions:
        type: integer
      purpose:
        type: string
    type: object
  schemas.ConflictResult:
    properties:
      has_conflict:
        type: boolean
      local_conflicts:
        items:
          $ref: '#/definitions/schemas.Session'
        type: array
      professional_conflicts:
        items:
          $ref: '#/definitions/schemas.Session'
        type: array
    type: object
  schemas.CreateCommunityPlanRequest:
    properties:
      community_id:
        type: string
      plan_id:
        type: string
    required:
    - community_id
    - plan_id
    type: object
  schemas.CreateCommunityRequest:
    properties:
      image_bytes:
        items:
          type: integer
        type: array
      image_url:
        type: string
      name:
        type: string
      purpose:
        type: string
    type: object
  schemas.CreateCommunityServiceRequest:
    properties:
      community_id:
        type: string
      service_id:
        type: string
    required:
    - community_id
    - service_id
    type: object
  schemas.CreateLocalRequest:
    properties:
      building_number:
        type: string
      capacity:
        type: integer
      district:
        type: string
      image_bytes:
        items:
          type: integer
        type: array
      image_url:
        type: string
      local_name:
        type: string
      province:
        type: string
      reference:
        type: string
      region:
        type: string
      street_name:
        type: string
    type: object
  schemas.CreateMembershipForUserRequest:
    properties:
      community_id:
        type: string
      description:
        type: string
      end_date:
        type: string
      plan_id:
        type: string
      start_date:
        type: string
      status:
        $ref: '#/definitions/schemas.MembershipStatus'
    type: object
  schemas.CreateMembershipRequest:
    properties:
      community_id:
        type: string
      description:
        type: string
      end_date:
        type: string
      plan_id:
        type: string
      start_date:
        type: string
      status:
        $ref: '#/definitions/schemas.MembershipStatus'
      user_id:
        type: string
    type: object
  schemas.CreateOnboardingRequest:
    properties:
      address:
        type: string
      birth_date:
        description: Datos personales adicionales
        type: string
      district:
        type: string
      document_number:
        type: string
      document_type:
        allOf:
        - $ref: '#/definitions/schemas.DocumentType'
        description: Documento
      gender:
        $ref: '#/definitions/schemas.Gender'
      phone_number:
        description: Contacto
        type: string
      postal_code:
        description: Dirección
        type: string
      province:
        type: string
      region:
        type: string
    required:
    - address
    - document_number
    - document_type
    - phone_number
    - postal_code
    type: object
  schemas.CreatePlanRequest:
    properties:
      fee:
        type: number
      reservation_limit:
        type: integer
      type:
        $ref: '#/definitions/model.PlanType'
    type: object
  schemas.CreateProfessionalRequest:
    properties:
      email:
        type: string
      first_last_name:
        type: string
      image_url:
        type: string
      name:
        type: string
      phone_number:
        type: string
      second_last_name:
        type: string
      specialty:
        type: string
      type:
        type: string
    type: object
  schemas.CreateReservationRequest:
    properties:
      membership_id:
        type: string
      name:
        type: string
      reservation_time:
        type: string
      session_id:
        type: string
      state:
        type: string
      user_id:
        type: string
    type: object
  schemas.CreateServiceLocalRequest:
    properties:
      local_id:
        type: string
      service_id:
        type: string
    required:
    - local_id
    - service_id
    type: object
  schemas.CreateServiceProfessionalRequest:
    properties:
      professional_id:
        type: string
      service_id:
        type: string
    required:
    - professional_id
    - service_id
    type: object
  schemas.CreateServiceRequest:
    properties:
      description:
        type: string
      image_url:
        type: string
      is_virtual:
        type: boolean
      name:
        type: string
    type: object
  schemas.CreateSessionRequest:
    properties:
      capacity:
        type: integer
      community_service_id:
        type: string
      date:
        type: string
      end_time:
        type: string
      local_id:
        type: string
      professional_id:
        type: string
      session_link:
        type: string
      start_time:
        type: string
      title:
        type: string
    type: object
  schemas.CreateUserRequest:
    properties:
      email:
        type: string
      first_last_name:
        type: string
      image_url:
        type: string
      memberships:
        items:
          $ref: '#/definitions/schemas.Membership'
        type: array
      name:
        type: string
      onboarding:
        $ref: '#/definitions/schemas.Onboarding'
      password:
        type: string
      rol:
        type: string
      second_last_name:
        type: string
    type: object
  schemas.DeleteCommunityPlanRequest:
    properties:
      community_id:
        type: string
      plan_id:
        type: string
    required:
    - community_id
    - plan_id
    type: object
  schemas.DeleteCommunityServiceRequest:
    properties:
      community_id:
        type: string
      service_id:
        type: string
    required:
    - community_id
    - service_id
    type: object
  schemas.DeleteServiceLocalRequest:
    properties:
      local_id:
        type: string
      service_id:
        type: string
    required:
    - local_id
    - service_id
    type: object
  schemas.DeleteServiceProfessionalRequest:
    properties:
      professional_id:
        type: string
      service_id:
        type: string
    required:
    - professional_id
    - service_id
    type: object
  schemas.DocumentType:
    enum:
    - DNI
    - FOREIGNER_CARD
    - PASSPORT
    type: string
    x-enum-varnames:
    - DocumentTypeDNI
    - DocumentTypeForeignerCard
    - DocumentTypePassport
  schemas.EntityTypeStat:
    properties:
      count:
        type: integer
      entity_type:
        type: string
    type: object
  schemas.ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  schemas.ForgotPasswordResponse:
    properties:
      message:
        type: string
      pin:
        type: string
    type: object
  schemas.Gender:
    enum:
    - MALE
    - FEMALE
    - OTHER
    type: string
    x-enum-varnames:
    - GenderMale
    - GenderFemale
    - GenderOther
  schemas.Local:
    properties:
      building_number:
        type: string
      capacity:
        type: integer
      district:
        type: string
      id:
        type: string
      image_url:
        type: string
      local_name:
        type: string
      province:
        type: string
      reference:
        type: string
      region:
        type: string
      street_name:
        type: string
    type: object
  schemas.LocalWithImage:
    properties:
      building_number:
        type: string
      capacity:
        type: integer
      district:
        type: string
      id:
        type: string
      image_bytes:
        items:
          type: integer
        type: array
      image_url:
        type: string
      local_name:
        type: string
      province:
        type: string
      reference:
        type: string
      region:
        type: string
      street_name:
        type: string
    type: object
  schemas.Locals:
    properties:
      locals:
        items:
          $ref: '#/definitions/schemas.Local'
        type: array
    type: object
  schemas.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  schemas.LoginResponse:
    properties:
      tokens:
        $ref: '#/definitions/schemas.TokenResponse'
      user:
        $ref: '#/definitions/schemas.UserProfile'
    type: object
  schemas.Membership:
    properties:
      community:
        $ref: '#/definitions/schemas.Community'
      community_id:
        type: string
      description:
        type: string
      end_date:
        type: string
      id:
        type: string
      plan:
        $ref: '#/definitions/schemas.Plan'
      plan_id:
        type: string
      start_date:
        type: string
      status:
        $ref: '#/definitions/schemas.MembershipStatus'
      user:
        $ref: '#/definitions/schemas.User'
      user_id:
        type: string
    type: object
  schemas.MembershipStatus:
    enum:
    - ACTIVE
    - EXPIRED
    - CANCELLED
    type: string
    x-enum-varnames:
    - MembershipStatusActive
    - MembershipStatusExpired
    - MembershipStatusCancelled
  schemas.Memberships:
    properties:
      memberships:
        items:
          $ref: '#/definitions/schemas.Membership'
        type: array
    type: object
  schemas.Onboarding:
    properties:
      address:
        type: string
      birth_date:
        description: Datos personales adicionales
        type: string
      district:
        type: string
      document_number:
        type: string
      document_type:
        allOf:
        - $ref: '#/definitions/schemas.DocumentType'
        description: Documento
      gender:
        $ref: '#/definitions/schemas.Gender'
      id:
        type: string
      phone_number:
        description: Contacto
        type: string
      postal_code:
        description: Dirección
        type: string
      province:
        type: string
      region:
        type: string
      user_id:
        type: string
    type: object
  schemas.Onboardings:
    properties:
      onboardings:
        items:
          $ref: '#/definitions/schemas.Onboarding'
        type: array
    type: object
  schemas.Plan:
    properties:
      fee:
        type: number
      id:
        type: string
      reservation_limit:
        type: integer
      type:
        $ref: '#/definitions/model.PlanType'
    type: object
  schemas.Plans:
    properties:
      plans:
        items:
          $ref: '#/definitions/schemas.Plan'
        type: array
    type: object
  schemas.Professional:
    properties:
      email:
        type: string
      first_last_name:
        type: string
      id:
        type: string
      image_url:
        type: string
      name:
        type: string
      phone_number:
        type: string
      second_last_name:
        type: string
      specialty:
        type: string
      type:
        type: string
    type: object
  schemas.Professionals:
    properties:
      professionals:
        items:
          $ref: '#/definitions/schemas.Professional'
        type: array
    type: object
  schemas.RegisterRequest:
    properties:
      email:
        type: string
      first_last_name:
        type: string
      image_url:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
      second_last_name:
        type: string
    required:
    - email
    - first_last_name
    - name
    - password
    type: object
  schemas.Reservation:
    properties:
      id:
        type: string
      last_modification:
        type: string
      membership_id:
        type: string
      name:
        type: string
      reservation_time:
        type: string
      session_id:
        type: string
      state:
        type: string
      user_id:
        type: string
    type: object
  schemas.Reservations:
    properties:
      reservations:
        items:
          $ref: '#/definitions/schemas.Reservation'
        type: array
    type: object
  schemas.Service:
    properties:
      description:
        type: string
      id:
        type: string
      image_url:
        type: string
      is_virtual:
        type: boolean
      name:
        type: string
    type: object
  schemas.ServiceLocal:
    properties:
      id:
        type: string
      local_id:
        type: string
      service_id:
        type: string
    type: object
  schemas.ServiceLocals:
    properties:
      service_locals:
        items:
          $ref: '#/definitions/schemas.ServiceLocal'
        type: array
    type: object
  schemas.ServiceProfessional:
    properties:
      id:
        type: string
      professional_id:
        type: string
      service_id:
        type: string
    type: object
  schemas.ServiceProfessionals:
    properties:
      service_professionals:
        items:
          $ref: '#/definitions/schemas.ServiceProfessional'
        type: array
    type: object
  schemas.Services:
    properties:
      services:
        items:
          $ref: '#/definitions/schemas.Service'
        type: array
    type: object
  schemas.Session:
    properties:
      capacity:
        type: integer
      community_service_id:
        type: string
      date:
        type: string
      end_time:
        type: string
      id:
        type: string
      local_id:
        type: string
      professional_id:
        type: string
      registered_count:
        type: integer
      session_link:
        type: string
      start_time:
        type: string
      state:
        type: string
      title:
        type: string
    type: object
  schemas.Sessions:
    properties:
      sessions:
        items:
          $ref: '#/definitions/schemas.Session'
        type: array
    type: object
  schemas.TimeSlot:
    properties:
      end:
        type: string
      start:
        type: string
      title:
        type: string
      type:
        description: '"professional" | "local"'
        type: string
    type: object
  schemas.TokenResponse:
    properties:
      access_token:
        type: string
      expires_in:
        $ref: '#/definitions/time.Duration'
      refresh_token:
        type: string
    type: object
  schemas.UpdateCommunityRequest:
    properties:
      image_bytes:
        items:
          type: integer
        type: array
      image_url:
        type: string
      name:
        type: string
      purpose:
        type: string
    type: object
  schemas.UpdateLocalRequest:
    properties:
      building_number:
        type: string
      capacity:
        type: integer
      district:
        type: string
      image_bytes:
        items:
          type: integer
        type: array
      image_url:
        type: string
      local_name:
        type: string
      province:
        type: string
      reference:
        type: string
      region:
        type: string
      street_name:
        type: string
    type: object
  schemas.UpdateMembershipRequest:
    properties:
      community_id:
        type: string
      description:
        type: string
      end_date:
        type: string
      plan_id:
        type: string
      start_date:
        type: string
      status:
        $ref: '#/definitions/schemas.MembershipStatus'
      user_id:
        type: string
    type: object
  schemas.UpdateOnboardingRequest:
    properties:
      address:
        type: string
      birth_date:
        description: Datos personales adicionales
        type: string
      district:
        type: string
      document_number:
        type: string
      document_type:
        allOf:
        - $ref: '#/definitions/schemas.DocumentType'
        description: Documento
      gender:
        $ref: '#/definitions/schemas.Gender'
      phone_number:
        description: Contacto
        type: string
      postal_code:
        description: Dirección
        type: string
      province:
        type: string
      region:
        type: string
    type: object
  schemas.UpdatePlanRequest:
    properties:
      fee:
        type: number
      reservation_limit:
        type: integer
      type:
        $ref: '#/definitions/model.PlanType'
    type: object
  schemas.UpdateProfessionalRequest:
    properties:
      email:
        type: string
      first_last_name:
        type: string
      image_url:
        type: string
      name:
        type: string
      phone_number:
        type: string
      second_last_name:
        type: string
      specialty:
        type: string
      type:
        type: string
    type: object
  schemas.UpdateReservationRequest:
    properties:
      membership_id:
        type: string
      name:
        type: string
      reservation_time:
        type: string
      session_id:
        type: string
      state:
        type: string
      user_id:
        type: string
    type: object
  schemas.UpdateServiceRequest:
    properties:
      description:
        type: string
      image_url:
        type: string
      is_virtual:
        type: boolean
      name:
        type: string
    type: object
  schemas.UpdateSessionRequest:
    properties:
      capacity:
        type: integer
      community_service_id:
        type: string
      date:
        type: string
      end_time:
        type: string
      local_id:
        type: string
      professional_id:
        type: string
      registered_count:
        type: integer
      session_link:
        type: string
      start_time:
        type: string
      state:
        type: string
      title:
        type: string
    type: object
  schemas.UpdateUserRequest:
    properties:
      email:
        type: string
      first_last_name:
        type: string
      image_url:
        type: string
      memberships:
        items:
          $ref: '#/definitions/schemas.Membership'
        type: array
      name:
        type: string
      onboarding:
        $ref: '#/definitions/schemas.Onboarding'
      password:
        type: string
      rol:
        type: string
      second_last_name:
        type: string
    type: object
  schemas.User:
    properties:
      email:
        type: string
      first_last_name:
        type: string
      id:
        type: string
      image_url:
        type: string
      memberships:
        items:
          $ref: '#/definitions/schemas.Membership'
        type: array
      name:
        type: string
      onboarding:
        $ref: '#/definitions/schemas.Onboarding'
      password:
        type: string
      rol:
        $ref: '#/definitions/schemas.UserRol'
      second_last_name:
        type: string
    type: object
  schemas.UserConnection:
    properties:
      connection_ip:
        type: string
      last_login:
        type: string
      role:
        $ref: '#/definitions/schemas.UserRol'
      user_email:
        type: string
      user_id:
        type: string
      user_name:
        type: string
    type: object
  schemas.UserProfile:
    properties:
      email:
        type: string
      first_last_name:
        type: string
      id:
        type: string
      image_url:
        type: string
      name:
        type: string
      rol:
        $ref: '#/definitions/schemas.UserRol'
      second_last_name:
        type: string
    type: object
  schemas.UserRol:
    enum:
    - ADMINISTRATOR
    - CLIENT
    - GUEST
    type: string
    x-enum-varnames:
    - UserRolAdmin
    - UserRolClient
    - UserRolGuest
  schemas.UserRoleDistribution:
    properties:
      count:
        type: integer
      role:
        $ref: '#/definitions/schemas.UserRol'
    type: object
  schemas.UserRoleStat:
    properties:
      count:
        type: integer
      user_role:
        type: string
    type: object
  schemas.UserStats:
    properties:
      admin_count:
        type: integer
      client_count:
        type: integer
      guest_count:
        type: integer
      recent_connections:
        items:
          $ref: '#/definitions/schemas.UserConnection'
        type: array
      role_distribution:
        items:
          $ref: '#/definitions/schemas.UserRoleDistribution'
        type: array
      total_users:
        type: integer
    type: object
  schemas.Users:
    properties:
      users:
        items:
          $ref: '#/definitions/schemas.User'
        type: array
    type: object
  time.Duration:
    enum:
    - -9223372036854775808
    - 9223372036854775807
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    - -9223372036854775808
    - 9223372036854775807
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    type: integer
    x-enum-varnames:
    - minDuration
    - maxDuration
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
    - minDuration
    - maxDuration
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
info:
  contact: {}
  description: AstroCat API sample for clients
  title: AstroCat API
  version: "1.0"
paths:
  /audit-log/:
    get:
      consumes:
      - application/json
      description: Retrieve audit logs with optional filtering and pagination
      parameters:
      - description: Comma-separated user IDs
        in: query
        name: userIds
        type: string
      - description: Comma-separated action types
        in: query
        name: actions
        type: string
      - description: Comma-separated entity types
        in: query
        name: entityTypes
        type: string
      - description: Comma-separated user roles
        in: query
        name: userRoles
        type: string
      - description: Start date (YYYY-MM-DD)
        in: query
        name: startDate
        type: string
      - description: End date (YYYY-MM-DD)
        in: query
        name: endDate
        type: string
      - description: Filter by success (true/false)
        in: query
        name: success
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: string
      - description: 'Page size (default: 50, max: 200)'
        in: query
        name: pageSize
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.AuditLogs'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Audit Logs
      tags:
      - AuditLog
  /audit-log/{auditLogId}/:
    get:
      consumes:
      - application/json
      description: Retrieve a specific audit log by its ID
      parameters:
      - description: Audit Log ID
        in: path
        name: auditLogId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.AuditLog'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Audit Log by ID
      tags:
      - AuditLog
  /audit-log/cleanup/:
    delete:
      consumes:
      - application/json
      description: Delete audit logs older than the specified number of days
      parameters:
      - description: 'Number of days to keep (default: 90)'
        in: query
        name: days
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete Old Audit Logs
      tags:
      - AuditLog
  /audit-log/stats/:
    get:
      consumes:
      - application/json
      description: Retrieve audit statistics for the specified time period
      parameters:
      - description: 'Number of days to include in stats (default: 30)'
        in: query
        name: days
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.AuditStats'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Audit Statistics
      tags:
      - AuditLog
  /auth/logout/:
    post:
      consumes:
      - application/json
      description: Logout user session (audit purposes)
      produces:
      - application/json
      responses:
        "200":
          description: Logout successful
          schema:
            type: string
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: User logout
      tags:
      - Auth
  /auth/refresh/:
    post:
      consumes:
      - application/json
      description: Refresh user access token.
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/schemas.TokenResponse'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Refresh user access token.
      tags:
      - Auth
  /community-plan/:
    get:
      consumes:
      - application/json
      description: Fetch all community-plan associations, filtered by params.
      parameters:
      - description: Community ID
        in: query
        name: communityId
        type: string
      - description: Plan ID
        in: query
        name: planId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.CommunityPlans'
        "400":
          description: Bad Request (e.g., invalid UUID format)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Community or Plan does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity (Invalid UUIDs or request body)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch CommunityPlans.
      tags:
      - CommunityPlan
    post:
      consumes:
      - application/json
      description: Associates a community with a plan.
      parameters:
      - description: Community-Plan Association Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateCommunityPlanRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.CommunityPlan'
        "400":
          description: Bad Request (e.g., invalid updatedBy)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Community or Plan does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "409":
          description: Conflict (Association already exists)
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity (Invalid UUIDs or request body)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create CommunityPlan.
      tags:
      - CommunityPlan
  /community-plan/{communityId}/{planId}/:
    delete:
      consumes:
      - application/json
      description: Deletes a specific community-plan association.
      parameters:
      - description: Community ID
        in: path
        name: communityId
        required: true
        type: string
      - description: Plan ID
        in: path
        name: planId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request (e.g., invalid UUID format)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Association does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error (e.g., deletion failed)
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete CommunityPlan.
      tags:
      - CommunityPlan
    get:
      consumes:
      - application/json
      description: Retrieves a specific community-plan association.
      parameters:
      - description: Community ID
        in: path
        name: communityId
        required: true
        type: string
      - description: Plan ID
        in: path
        name: planId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.CommunityPlan'
        "400":
          description: Bad Request (e.g., invalid UUID format)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Association does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get CommunityPlan.
      tags:
      - CommunityPlan
  /community-plan/bulk-create/:
    post:
      consumes:
      - application/json
      description: Creates multiple community-plan associations.
      parameters:
      - description: Bulk Create CommunityPlans Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BatchCreateCommunityPlanRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.CommunityPlans'
        "400":
          description: Bad Request (e.g., invalid updatedBy)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Community or Plan does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "409":
          description: Conflict (Association already exists)
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity (Invalid UUIDs or request body)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Create CommunityPlans.
      tags:
      - CommunityPlan
  /community-plan/bulk-delete/:
    delete:
      consumes:
      - application/json
      description: Bulk deletes community-plan associations.
      parameters:
      - description: Bulk Delete CommunityPlan Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BulkDeleteCommunityPlanRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Delete CommunityPlans.
      tags:
      - CommunityPlan
  /community-service/:
    get:
      consumes:
      - application/json
      description: Fetch all community-service associations, filtered by params.
      parameters:
      - description: Community ID
        in: query
        name: communityId
        type: string
      - description: Service ID
        in: query
        name: serviceId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.CommunityServices'
        "400":
          description: Bad Request (e.g., invalid UUID format)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Community or Service does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity (Invalid UUIDs or request body)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch CommunityServices.
      tags:
      - CommunityService
    post:
      consumes:
      - application/json
      description: Associates a community with a service.
      parameters:
      - description: Community-Service Association Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateCommunityServiceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.CommunityService'
        "400":
          description: Bad Request (e.g., invalid updatedBy)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Community or Service does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "409":
          description: Conflict (Association already exists)
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity (Invalid UUIDs or request body)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create CommunityService.
      tags:
      - CommunityService
  /community-service/{communityId}/:
    get:
      consumes:
      - application/json
      description: Retrieves all services that are linked to a given community, based
        on the community ID.
      parameters:
      - description: Community ID
        in: path
        name: communityId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Service'
        "400":
          description: Bad Request (e.g., invalid UUID format)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (No services associated with the given community
            ID)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get all services associated with a specific community.
      tags:
      - CommunityService
  /community-service/{communityId}/{serviceId}/:
    delete:
      consumes:
      - application/json
      description: Deletes a specific community-service association.
      parameters:
      - description: Community ID
        in: path
        name: communityId
        required: true
        type: string
      - description: Service ID
        in: path
        name: serviceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request (e.g., invalid UUID format)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Association does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error (e.g., deletion failed)
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete CommunityService.
      tags:
      - CommunityService
    get:
      consumes:
      - application/json
      description: Retrieves a specific community-service association.
      parameters:
      - description: Community ID
        in: path
        name: communityId
        required: true
        type: string
      - description: Service ID
        in: path
        name: serviceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.CommunityService'
        "400":
          description: Bad Request (e.g., invalid UUID format)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Association does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get CommunityService.
      tags:
      - CommunityService
  /community-service/bulk-create/:
    post:
      consumes:
      - application/json
      description: Creates multiple community-service associations.
      parameters:
      - description: Bulk Create CommunityServices Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BatchCreateCommunityServiceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.CommunityServices'
        "400":
          description: Bad Request (e.g., invalid updatedBy)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Community or Service does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "409":
          description: Conflict (Association already exists)
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity (Invalid UUIDs or request body)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Create CommunityServices.
      tags:
      - CommunityService
  /community-service/bulk-delete/:
    delete:
      consumes:
      - application/json
      description: Bulk deletes community-service associations.
      parameters:
      - description: Bulk Delete CommunityService Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BulkDeleteCommunityServiceRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Delete CommunityServices.
      tags:
      - CommunityService
  /community/:
    get:
      consumes:
      - application/json
      description: Fetch all communities, filtered by params.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Communities'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch Communities.
      tags:
      - Community
    post:
      consumes:
      - application/json
      description: Create the community information.
      parameters:
      - description: Create Community Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateCommunityRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Community'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create Community.
      tags:
      - Community
  /community/{communityId}/:
    delete:
      consumes:
      - application/json
      description: Deletes a community given its id.
      parameters:
      - description: Community ID
        in: path
        name: communityId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete Community.
      tags:
      - Community
    get:
      consumes:
      - application/json
      description: Gets a community given its id.
      parameters:
      - description: Community ID
        in: path
        name: communityId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Community'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Community.
      tags:
      - Community
    patch:
      consumes:
      - application/json
      description: Update the community information.
      parameters:
      - description: Community ID
        in: path
        name: communityId
        required: true
        type: string
      - description: Update Community Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateCommunityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/schemas.Community'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update Community.
      tags:
      - Community
  /community/{communityId}/image/:
    get:
      consumes:
      - application/json
      description: Get community information with image bytes.
      parameters:
      - description: Community ID
        in: path
        name: communityId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.CommunityWithImage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Community with Image.
      tags:
      - Community
  /community/bulk-create/:
    post:
      consumes:
      - application/json
      description: Create multiple communities in a single.
      parameters:
      - description: Bulk Create Communities Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BatchCreateCommunityRequest'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Communities'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Create Community.
      tags:
      - Community
  /community/bulk-delete/:
    delete:
      consumes:
      - application/json
      description: Bulk deletes communities given their ids.
      parameters:
      - description: Bulk Delete Community Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BulkDeleteCommunityRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/schemas.Community'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Delete Communities.
      tags:
      - Community
  /error-log/:
    get:
      consumes:
      - application/json
      description: Retrieve error logs with optional filtering and pagination
      parameters:
      - description: Comma-separated user IDs
        in: query
        name: userIds
        type: string
      - description: Comma-separated action types
        in: query
        name: actions
        type: string
      - description: Comma-separated entity types
        in: query
        name: entityTypes
        type: string
      - description: Comma-separated user roles
        in: query
        name: userRoles
        type: string
      - description: Start date (YYYY-MM-DD)
        in: query
        name: startDate
        type: string
      - description: End date (YYYY-MM-DD)
        in: query
        name: endDate
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: string
      - description: 'Page size (default: 50, max: 200)'
        in: query
        name: pageSize
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.AuditLogs'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Error Logs
      tags:
      - ErrorLog
  /error-log/{auditLogId}/:
    get:
      consumes:
      - application/json
      description: Retrieve a specific error log by its ID
      parameters:
      - description: Audit Log ID
        in: path
        name: auditLogId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.AuditLog'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Error Log by ID
      tags:
      - ErrorLog
  /error-log/stats/:
    get:
      consumes:
      - application/json
      description: Retrieve error statistics for the specified time period
      parameters:
      - description: 'Number of days to include in stats (default: 30)'
        in: query
        name: days
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.AuditStats'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Error Statistics
      tags:
      - ErrorLog
  /forgot-password/:
    post:
      consumes:
      - application/json
      description: Envía un código de recuperación (PIN) al correo electrónico del
        usuario
      parameters:
      - description: Email del usuario
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Código enviado exitosamente
          schema:
            $ref: '#/definitions/schemas.ForgotPasswordResponse'
        "400":
          description: Bad Request - Error al enviar el código
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found - Usuario no encontrado
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity - Formato incorrecto
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Recovery Password
      tags:
      - ForgotPassword
  /health-check/:
    get:
      consumes:
      - application/json
      description: Verify connection in swagger
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Health Check
      tags:
      - Health Check
  /local/:
    get:
      consumes:
      - application/json
      description: Fetches all locals.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Locals'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch Locals.
      tags:
      - Local
    post:
      consumes:
      - application/json
      description: Create the local information.
      parameters:
      - description: Create Local Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateLocalRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Local'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create Local.
      tags:
      - Local
  /local/{localId}/:
    delete:
      consumes:
      - application/json
      description: Deletes a local given its id.
      parameters:
      - description: Local ID
        in: path
        name: localId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete Local.
      tags:
      - Local
    get:
      consumes:
      - application/json
      description: Gets a local given its id.
      parameters:
      - description: Local ID
        in: path
        name: localId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Local'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Local.
      tags:
      - Local
    patch:
      consumes:
      - application/json
      description: Update the local information.
      parameters:
      - description: Local ID
        in: path
        name: localId
        required: true
        type: string
      - description: Update Local Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateLocalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/schemas.Local'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update Local.
      tags:
      - Local
  /local/{localId}/image/:
    get:
      consumes:
      - application/json
      description: Gets a local given its id with image bytes.
      parameters:
      - description: Local ID
        in: path
        name: localId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.LocalWithImage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Local with image.
      tags:
      - Local
  /local/bulk-create/:
    post:
      consumes:
      - application/json
      description: Creates multiple locals in a batch.
      parameters:
      - description: Bulk Create Locals Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BatchCreateLocalRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Locals'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Create Locals.
      tags:
      - Local
  /local/bulk-delete/:
    delete:
      consumes:
      - application/json
      description: Bulk delete locals given their ids.
      parameters:
      - description: Bulk Delete Local Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BulkDeleteLocalRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Delete Locals.
      tags:
      - Local
  /login/:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password, returns user info and
        tokens
      parameters:
      - description: Login Request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/schemas.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/schemas.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized - Invalid credentials
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: User Login
      tags:
      - Login
  /me/:
    get:
      consumes:
      - application/json
      description: Get current authenticated user information from token
      produces:
      - application/json
      responses:
        "200":
          description: User info
          schema:
            $ref: '#/definitions/schemas.UserProfile'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Current User Info
      tags:
      - Login
  /membership/:
    get:
      consumes:
      - application/json
      description: Fetch all memberships.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Memberships'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch Memberships.
      tags:
      - Membership
    post:
      consumes:
      - application/json
      description: Creates a new membership.
      parameters:
      - description: Create Membership Request
        in: body
        name: createMembershipRequest
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateMembershipRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Membership'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create Membership.
      tags:
      - Membership
  /membership/{membershipId}/:
    delete:
      consumes:
      - application/json
      description: Deletes a membership given its id.
      parameters:
      - description: Membership ID
        in: path
        name: membershipId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete Membership by ID.
      tags:
      - Membership
    get:
      consumes:
      - application/json
      description: Gets a membership given its id.
      parameters:
      - description: Membership ID
        in: path
        name: membershipId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Membership'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Membership by ID.
      tags:
      - Membership
    patch:
      consumes:
      - application/json
      description: Updates a membership given its id.
      parameters:
      - description: Membership ID
        in: path
        name: membershipId
        required: true
        type: string
      - description: Update Membership Request
        in: body
        name: updateMembershipRequest
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateMembershipRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Membership'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update Membership by ID.
      tags:
      - Membership
  /membership/community/{communityId}/:
    get:
      consumes:
      - application/json
      description: Gets all memberships for a given community id.
      parameters:
      - description: Community ID
        in: path
        name: communityId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Memberships'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Memberships by Community ID.
      tags:
      - Membership
  /membership/user/{userId}/:
    get:
      consumes:
      - application/json
      description: Gets all memberships for a given user id.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Memberships'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Memberships by User ID.
      tags:
      - Membership
    post:
      consumes:
      - application/json
      description: Creates a new membership for a specific user.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: Create Membership For User Request
        in: body
        name: createMembershipForUserRequest
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateMembershipForUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Membership'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create Membership for User.
      tags:
      - Membership
  /onboarding/:
    get:
      consumes:
      - application/json
      description: Fetch all onboardings.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Onboardings'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch Onboardings.
      tags:
      - Onboarding
  /onboarding/{onboardingId}/:
    delete:
      consumes:
      - application/json
      description: Deletes an onboarding given its id.
      parameters:
      - description: Onboarding ID
        in: path
        name: onboardingId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete Onboarding by ID.
      tags:
      - Onboarding
    get:
      consumes:
      - application/json
      description: Gets an onboarding given its id.
      parameters:
      - description: Onboarding ID
        in: path
        name: onboardingId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Onboarding'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Onboarding by ID.
      tags:
      - Onboarding
    patch:
      consumes:
      - application/json
      description: Updates an onboarding given its id.
      parameters:
      - description: Onboarding ID
        in: path
        name: onboardingId
        required: true
        type: string
      - description: Update Onboarding Request
        in: body
        name: updateOnboardingRequest
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateOnboardingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Onboarding'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update Onboarding by ID.
      tags:
      - Onboarding
  /onboarding/user/{userId}/:
    delete:
      consumes:
      - application/json
      description: Deletes an onboarding given its user id.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete Onboarding by User ID.
      tags:
      - Onboarding
    get:
      consumes:
      - application/json
      description: Gets an onboarding given its user id.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Onboarding'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Onboarding by User ID.
      tags:
      - Onboarding
    patch:
      consumes:
      - application/json
      description: Updates an onboarding given its user id.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: Update Onboarding Request
        in: body
        name: updateOnboardingRequest
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateOnboardingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Onboarding'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update Onboarding by User ID.
      tags:
      - Onboarding
    post:
      consumes:
      - application/json
      description: Creates a new onboarding for a specific user.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: Create Onboarding Request
        in: body
        name: createOnboardingRequest
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateOnboardingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Onboarding'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create Onboarding for User.
      tags:
      - Onboarding
  /plan/:
    get:
      consumes:
      - application/json
      description: Fetch all plans, filtered by params.
      parameters:
      - collectionFormat: csv
        description: Plan IDs
        in: query
        items:
          type: string
        name: ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Plans'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch Plans.
      tags:
      - Plan
    post:
      consumes:
      - application/json
      description: Create the plan information.
      parameters:
      - description: Create Plan Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreatePlanRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Plan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create Plan.
      tags:
      - Plan
  /plan/{planId}/:
    delete:
      consumes:
      - application/json
      description: Deletes a plan given its id.
      parameters:
      - description: Plan ID
        in: path
        name: planId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete Plan.
      tags:
      - Plan
    get:
      consumes:
      - application/json
      description: Gets a plan given its id.
      parameters:
      - description: Plan ID
        in: path
        name: planId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Plan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Plan.
      tags:
      - Plan
    patch:
      consumes:
      - application/json
      description: Update the plan information.
      parameters:
      - description: Plan ID
        in: path
        name: planId
        required: true
        type: string
      - description: Update Plan Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdatePlanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/schemas.Plan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update Plan.
      tags:
      - Plan
  /plan/bulk-create/:
    post:
      consumes:
      - application/json
      description: Creates multiple plans in a batch.
      parameters:
      - description: Bulk Create Plan Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BulkCreatePlanRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Plans'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Create Plans.
      tags:
      - Plan
  /plan/bulk-delete/:
    delete:
      consumes:
      - application/json
      description: Bulk deletes plans given their ids.
      parameters:
      - description: Bulk Delete Plan Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BulkDeletePlanRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/schemas.Plan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Delete Plans.
      tags:
      - Plan
  /professional/:
    get:
      consumes:
      - application/json
      description: Fetch all professionals, filtered by params.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Professionals'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch Professionals.
      tags:
      - Professional
    post:
      consumes:
      - application/json
      description: Creates a new professional.
      parameters:
      - description: Create Professional Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateProfessionalRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Professional'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create Professional.
      tags:
      - Professional
  /professional/{professionalId}/:
    delete:
      consumes:
      - application/json
      description: Deletes a professional given its id.
      parameters:
      - description: Professional ID
        in: path
        name: professionalId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/schemas.Professional'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete Professional.
      tags:
      - Professional
    get:
      consumes:
      - application/json
      description: Gets a professional given its id.
      parameters:
      - description: Professional ID
        in: path
        name: professionalId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Professional'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Professional.
      tags:
      - Professional
    patch:
      consumes:
      - application/json
      description: Updates a professional given its id.
      parameters:
      - description: Professional ID
        in: path
        name: professionalId
        required: true
        type: string
      - description: Update Professional Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateProfessionalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Professional'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update Professional.
      tags:
      - Professional
  /professional/bulk-create/:
    post:
      consumes:
      - application/json
      description: Creates multiple professionals in a batch.
      parameters:
      - description: Bulk Create Professional Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BulkCreateProfessionalRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Professionals'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Create Professionals.
      tags:
      - Professional
  /professional/bulk-delete/:
    delete:
      consumes:
      - application/json
      description: Bulk deletes professionals given their ids.
      parameters:
      - description: Bulk Delete Professional Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BulkDeleteProfessionalRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/schemas.Professional'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Delete Professionals.
      tags:
      - Professional
  /register/:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password, returns user info
        and tokens
      parameters:
      - description: Register Request
        in: body
        name: registerRequest
        required: true
        schema:
          $ref: '#/definitions/schemas.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Registration successful
          schema:
            $ref: '#/definitions/schemas.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "409":
          description: Conflict - User already exists
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: User Registration
      tags:
      - Login
  /reservation/:
    get:
      consumes:
      - application/json
      description: Fetch all reservations, filtered by params.
      parameters:
      - collectionFormat: csv
        description: User IDs
        in: query
        items:
          type: string
        name: userIds
        type: array
      - collectionFormat: csv
        description: Session IDs
        in: query
        items:
          type: string
        name: sessionIds
        type: array
      - collectionFormat: csv
        description: Reservation States
        in: query
        items:
          type: string
        name: states
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Reservations'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch Reservations.
      tags:
      - Reservation
    post:
      consumes:
      - application/json
      description: Create a new reservation.
      parameters:
      - description: Create Reservation Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateReservationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Reservation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create Reservation.
      tags:
      - Reservation
  /reservation/{reservationId}/:
    delete:
      consumes:
      - application/json
      description: Delete a reservation given its id.
      parameters:
      - description: Reservation ID
        in: path
        name: reservationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete Reservation.
      tags:
      - Reservation
    get:
      consumes:
      - application/json
      description: Gets a reservation given its id.
      parameters:
      - description: Reservation ID
        in: path
        name: reservationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Reservation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Reservation.
      tags:
      - Reservation
    patch:
      consumes:
      - application/json
      description: Update an existing reservation.
      parameters:
      - description: Reservation ID
        in: path
        name: reservationId
        required: true
        type: string
      - description: Update Reservation Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateReservationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Reservation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update Reservation.
      tags:
      - Reservation
  /reservation/bulk-delete/:
    delete:
      consumes:
      - application/json
      description: Bulk delete reservations given their ids.
      parameters:
      - description: Bulk Delete Reservation Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BulkDeleteReservationRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Delete Reservations.
      tags:
      - Reservation
  /service-local/:
    get:
      consumes:
      - application/json
      description: Fetch all service-local associations, filtered by params.
      parameters:
      - description: Service ID
        in: query
        name: serviceId
        type: string
      - description: Local ID
        in: query
        name: localId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ServiceLocals'
        "400":
          description: Bad Request (e.g., invalid UUID format)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Service or Local does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity (Invalid UUIDs or request body)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch ServiceLocals.
      tags:
      - ServiceLocal
    post:
      consumes:
      - application/json
      description: Associates a service with a local.
      parameters:
      - description: Service-Local Association Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateServiceLocalRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.ServiceLocal'
        "400":
          description: Bad Request (e.g., invalid updatedBy)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Service or Local does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "409":
          description: Conflict (Association already exists)
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity (Invalid UUIDs or request body)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create ServiceLocal.
      tags:
      - ServiceLocal
  /service-local/{serviceId}/{localId}/:
    delete:
      consumes:
      - application/json
      description: Deletes a specific service-local association.
      parameters:
      - description: Service ID
        in: path
        name: serviceId
        required: true
        type: string
      - description: Local ID
        in: path
        name: localId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request (e.g., invalid UUID format)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Association does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error (e.g., deletion failed)
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete ServiceLocal.
      tags:
      - ServiceLocal
    get:
      consumes:
      - application/json
      description: Retrieves a specific service-local association.
      parameters:
      - description: Service ID
        in: path
        name: serviceId
        required: true
        type: string
      - description: Local ID
        in: path
        name: localId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ServiceLocal'
        "400":
          description: Bad Request (e.g., invalid UUID format)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Association does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get ServiceLocal.
      tags:
      - ServiceLocal
  /service-local/bulk/:
    delete:
      consumes:
      - application/json
      description: Bulk deletes service-local associations.
      parameters:
      - description: Bulk Delete ServiceLocal Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BulkDeleteServiceLocalRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Delete ServiceLocals.
      tags:
      - ServiceLocal
    post:
      consumes:
      - application/json
      description: Creates multiple service-local associations.
      parameters:
      - description: Bulk Create ServiceLocals Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BatchCreateServiceLocalRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.ServiceLocals'
        "400":
          description: Bad Request (e.g., invalid updatedBy)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Service or Local does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "409":
          description: Conflict (Association already exists)
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity (Invalid UUIDs or request body)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Create ServiceLocals.
      tags:
      - ServiceLocal
  /service-professional/:
    get:
      consumes:
      - application/json
      description: Fetch all service-professional associations, filtered by params.
      parameters:
      - description: Service ID
        in: query
        name: serviceId
        type: string
      - description: Professional ID
        in: query
        name: professionalId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ServiceProfessionals'
        "400":
          description: Bad Request (e.g., invalid UUID format)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Service or Professional does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity (Invalid UUIDs or request body)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch ServiceProfessionals.
      tags:
      - ServiceProfessional
    post:
      consumes:
      - application/json
      description: Associates a service with a professional.
      parameters:
      - description: Service-Professional Association Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateServiceProfessionalRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.ServiceProfessional'
        "400":
          description: Bad Request (e.g., invalid updatedBy)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Service or Professional does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "409":
          description: Conflict (Association already exists)
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity (Invalid UUIDs or request body)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create ServiceProfessional.
      tags:
      - ServiceProfessional
  /service-professional/{serviceId}/{professionalId}/:
    delete:
      consumes:
      - application/json
      description: Deletes a specific service-professional association.
      parameters:
      - description: Service ID
        in: path
        name: serviceId
        required: true
        type: string
      - description: Professional ID
        in: path
        name: professionalId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request (e.g., invalid UUID format)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Association does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error (e.g., deletion failed)
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete ServiceProfessional.
      tags:
      - ServiceProfessional
    get:
      consumes:
      - application/json
      description: Retrieves a specific service-professional association.
      parameters:
      - description: Service ID
        in: path
        name: serviceId
        required: true
        type: string
      - description: Professional ID
        in: path
        name: professionalId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ServiceProfessional'
        "400":
          description: Bad Request (e.g., invalid UUID format)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Association does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get ServiceProfessional.
      tags:
      - ServiceProfessional
  /service-professional/bulk/:
    delete:
      consumes:
      - application/json
      description: Bulk deletes service-professional associations.
      parameters:
      - description: Bulk Delete ServiceProfessional Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BulkDeleteServiceProfessionalRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Delete ServiceProfessionals.
      tags:
      - ServiceProfessional
    post:
      consumes:
      - application/json
      description: Creates multiple service-professional associations.
      parameters:
      - description: Bulk Create ServiceProfessionals Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BatchCreateServiceProfessionalRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.ServiceProfessionals'
        "400":
          description: Bad Request (e.g., invalid updatedBy)
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found (Service or Professional does not exist)
          schema:
            $ref: '#/definitions/errors.Error'
        "409":
          description: Conflict (Association already exists)
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity (Invalid UUIDs or request body)
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Create ServiceProfessionals.
      tags:
      - ServiceProfessional
  /service/:
    get:
      consumes:
      - application/json
      description: Fetch all services, filtered by params.
      parameters:
      - collectionFormat: csv
        description: Service IDs
        in: query
        items:
          type: string
        name: ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Services'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch Services.
      tags:
      - Service
    post:
      consumes:
      - application/json
      description: Create the service information.
      parameters:
      - description: Create Service Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateServiceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Service'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create Service.
      tags:
      - Service
  /service/{serviceId}/:
    delete:
      consumes:
      - application/json
      description: Deletes a service given its id.
      parameters:
      - description: Service ID
        in: path
        name: serviceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete Service.
      tags:
      - Service
    get:
      consumes:
      - application/json
      description: Gets a service given its id.
      parameters:
      - description: Service ID
        in: path
        name: serviceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Service'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Service.
      tags:
      - Service
    patch:
      consumes:
      - application/json
      description: Update the service information.
      parameters:
      - description: Service ID
        in: path
        name: serviceId
        required: true
        type: string
      - description: Update Service Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateServiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/schemas.Service'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update Service.
      tags:
      - Service
  /service/bulk-delete/:
    delete:
      consumes:
      - application/json
      description: Bulk delete services given their ids.
      parameters:
      - description: Bulk Delete Service Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BulkDeleteServiceRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Delete Services.
      tags:
      - Service
  /session/:
    get:
      consumes:
      - application/json
      description: Fetch all sessions, filtered by params.
      parameters:
      - collectionFormat: csv
        description: Professional IDs
        in: query
        items:
          type: string
        name: professionalIds
        type: array
      - collectionFormat: csv
        description: Local IDs
        in: query
        items:
          type: string
        name: localIds
        type: array
      - collectionFormat: csv
        description: Community Service IDs
        in: query
        items:
          type: string
        name: communityServiceIds
        type: array
      - collectionFormat: csv
        description: Session States
        in: query
        items:
          type: string
        name: states
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Sessions'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch Sessions.
      tags:
      - Session
    post:
      consumes:
      - application/json
      description: Create the session information.
      parameters:
      - description: Create Session Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateSessionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Session'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create Session.
      tags:
      - Session
  /session/{sessionId}/:
    delete:
      consumes:
      - application/json
      description: Deletes a session given its id.
      parameters:
      - description: Session ID
        in: path
        name: sessionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/schemas.Session'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete Session.
      tags:
      - Session
    get:
      consumes:
      - application/json
      description: Gets a session given its id.
      parameters:
      - description: Session ID
        in: path
        name: sessionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Session'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Session.
      tags:
      - Session
    patch:
      consumes:
      - application/json
      description: Update the session information.
      parameters:
      - description: Session ID
        in: path
        name: sessionId
        required: true
        type: string
      - description: Update Session Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateSessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/schemas.Session'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update Session.
      tags:
      - Session
  /session/availability/:
    post:
      consumes:
      - application/json
      description: Get availability information for a specific date.
      parameters:
      - description: Availability Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.AvailabilityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.AvailabilityResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Day Availability.
      tags:
      - Session
  /session/bulk-delete/:
    delete:
      consumes:
      - application/json
      description: Bulk deletes sessions given their ids.
      parameters:
      - description: Bulk Delete Session Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BulkDeleteSessionRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/schemas.Session'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Delete Sessions.
      tags:
      - Session
  /session/bulk/:
    post:
      consumes:
      - application/json
      description: Create multiple sessions in a single.
      parameters:
      - description: Bulk Create Sessions Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BatchCreateSessionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Sessions'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Create Session.
      tags:
      - Session
  /session/check-conflicts/:
    post:
      consumes:
      - application/json
      description: Check for time conflicts with existing sessions.
      parameters:
      - description: Check Conflict Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CheckConflictRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ConflictResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Check Session Conflicts.
      tags:
      - Session
  /user/:
    get:
      consumes:
      - application/json
      description: Fetch all users, filtered by params.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch Users.
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Creates a new user.
      parameters:
      - description: Create User Request
        in: body
        name: createUserRequest
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create User.
      tags:
      - User
  /user/{userId}/:
    delete:
      consumes:
      - application/json
      description: Deletes a user given its id.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete User.
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Gets a user given its id.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get User.
      tags:
      - User
    patch:
      consumes:
      - application/json
      description: Updates a user given its id.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: Update User Request
        in: body
        name: updateUserRequest
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update User.
      tags:
      - User
  /user/{userId}/role/:
    patch:
      consumes:
      - application/json
      description: Changes the role of a user given its id.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: Change Role Request
        in: body
        name: changeRoleRequest
        required: true
        schema:
          $ref: '#/definitions/schemas.ChangeUserRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "403":
          description: Forbidden - Admin role required
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Change User Role.
      tags:
      - User
  /user/bulk-create/:
    post:
      consumes:
      - application/json
      description: Bulk creates users.
      parameters:
      - description: Bulk Create User Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BulkCreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Create Users.
      tags:
      - User
  /user/bulk-delete/:
    delete:
      consumes:
      - application/json
      description: Bulk delete users given their ids.
      parameters:
      - description: Bulk Delete User Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BulkDeleteUserRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Delete Users.
      tags:
      - User
  /user/change-password/:
    post:
      consumes:
      - application/json
      parameters:
      - description: Email and new password
        in: body
        name: changePassword
        required: true
        schema:
          $ref: '#/definitions/schemas.ChangePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/echo.Map'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Change password with email
      tags:
      - User
  /user/check-email/:
    get:
      consumes:
      - application/json
      description: Checks if a user exists with the given email address.
      parameters:
      - description: Email address
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.CheckUserExistsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Check User Exists by Email.
      tags:
      - User
  /user/stats/:
    get:
      consumes:
      - application/json
      description: Get user statistics including role distribution and recent connections.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.UserStats'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "403":
          description: Forbidden - Admin role required
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get User Statistics.
      tags:
      - User
swagger: "2.0"
