basePath: /
definitions:
  errors.Error:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  model.PlanType:
    enum:
    - MONTHLY
    - ANUAL
    type: string
    x-enum-varnames:
    - PlanTypeMonthly
    - PlanTypeAnual
  schemas.BatchCreateCommunityRequest:
    properties:
      communities:
        items:
          $ref: '#/definitions/schemas.CreateCommunityRequest'
        type: array
    type: object
  schemas.Communities:
    properties:
      communities:
        items:
          $ref: '#/definitions/schemas.Community'
        type: array
    type: object
  schemas.Community:
    properties:
      id:
        type: string
      image_url:
        type: string
      name:
        type: string
      number_subscriptions:
        type: integer
      purpose:
        type: string
    type: object
  schemas.CreateCommunityRequest:
    properties:
      image_url:
        type: string
      name:
        type: string
      purpose:
        type: string
    type: object
  schemas.CreateLocalRequest:
    properties:
      building_number:
        type: string
      capacity:
        type: integer
      district:
        type: string
      image_url:
        type: string
      local_name:
        type: string
      province:
        type: string
      reference:
        type: string
      region:
        type: string
      street_name:
        type: string
    type: object
  schemas.CreatePlanRequest:
    properties:
      fee:
        type: number
      reservation_limit:
        type: integer
      type:
        $ref: '#/definitions/model.PlanType'
    type: object
  schemas.CreateProfessionalRequest:
    properties:
      email:
        type: string
      first_last_name:
        type: string
      image_url:
        type: string
      name:
        type: string
      phone_number:
        type: string
      second_last_name:
        type: string
      specialty:
        type: string
      type:
        type: string
    type: object
  schemas.CreateServiceRequest:
    properties:
      description:
        type: string
      image_url:
        type: string
      is_virtual:
        type: boolean
      name:
        type: string
    type: object
  schemas.CreateUserRequest:
    properties:
      email:
        type: string
      first_last_name:
        type: string
      image_url:
        type: string
      memberships:
        items:
          $ref: '#/definitions/schemas.Membership'
        type: array
      name:
        type: string
      onboarding:
        $ref: '#/definitions/schemas.Onboarding'
      password:
        type: string
      rol:
        type: string
      second_last_name:
        type: string
    type: object
  schemas.IdentificationDocument:
    properties:
      document_number:
        type: string
      document_type:
        type: string
      id:
        type: string
    type: object
  schemas.Local:
    properties:
      building_number:
        type: string
      capacity:
        type: integer
      district:
        type: string
      id:
        type: string
      image_url:
        type: string
      local_name:
        type: string
      province:
        type: string
      reference:
        type: string
      region:
        type: string
      street_name:
        type: string
    type: object
  schemas.Locals:
    properties:
      locals:
        items:
          $ref: '#/definitions/schemas.Local'
        type: array
    type: object
  schemas.Membership:
    properties:
      community:
        $ref: '#/definitions/schemas.Community'
      description:
        type: string
      end_date:
        type: string
      id:
        type: string
      plan:
        $ref: '#/definitions/schemas.Plan'
      start_date:
        type: string
      status:
        $ref: '#/definitions/schemas.MembershipStatus'
    type: object
  schemas.MembershipStatus:
    enum:
    - ACTIVE
    - EXPIRED
    - CANCELLED
    type: string
    x-enum-varnames:
    - MembershipStatusActive
    - MembershipStatusExpired
    - MembershipStatusCancelled
  schemas.Onboarding:
    properties:
      address:
        type: string
      city:
        type: string
      district:
        type: string
      id:
        type: string
      identification_document:
        $ref: '#/definitions/schemas.IdentificationDocument'
      phone_number:
        type: string
      postal_code:
        type: string
    type: object
  schemas.Plan:
    properties:
      fee:
        type: number
      id:
        type: string
      reservation_limit:
        type: integer
      type:
        $ref: '#/definitions/model.PlanType'
    type: object
  schemas.Plans:
    properties:
      plans:
        items:
          $ref: '#/definitions/schemas.Plan'
        type: array
    type: object
  schemas.Professional:
    properties:
      email:
        type: string
      first_last_name:
        type: string
      id:
        type: string
      image_url:
        type: string
      name:
        type: string
      phone_number:
        type: string
      second_last_name:
        type: string
      specialty:
        type: string
      type:
        type: string
    type: object
  schemas.Professionals:
    properties:
      professionals:
        items:
          $ref: '#/definitions/schemas.Professional'
        type: array
    type: object
  schemas.Service:
    properties:
      description:
        type: string
      id:
        type: string
      image_url:
        type: string
      is_virtual:
        type: boolean
      name:
        type: string
    type: object
  schemas.Services:
    properties:
      services:
        items:
          $ref: '#/definitions/schemas.Service'
        type: array
    type: object
  schemas.UpdateCommunityRequest:
    properties:
      image_url:
        type: string
      name:
        type: string
      purpose:
        type: string
    type: object
  schemas.UpdateLocalRequest:
    properties:
      building_number:
        type: string
      capacity:
        type: integer
      district:
        type: string
      image_url:
        type: string
      local_name:
        type: string
      province:
        type: string
      reference:
        type: string
      region:
        type: string
      street_name:
        type: string
    type: object
  schemas.UpdatePlanRequest:
    properties:
      fee:
        type: number
      reservation_limit:
        type: integer
      type:
        $ref: '#/definitions/model.PlanType'
    type: object
  schemas.UpdateProfessionalRequest:
    properties:
      email:
        type: string
      first_last_name:
        type: string
      image_url:
        type: string
      name:
        type: string
      phone_number:
        type: string
      second_last_name:
        type: string
      specialty:
        type: string
      type:
        type: string
    type: object
  schemas.UpdateServiceRequest:
    properties:
      description:
        type: string
      image_url:
        type: string
      is_virtual:
        type: boolean
      name:
        type: string
    type: object
  schemas.UpdateUserRequest:
    properties:
      email:
        type: string
      first_last_name:
        type: string
      image_url:
        type: string
      memberships:
        items:
          $ref: '#/definitions/schemas.Membership'
        type: array
      name:
        type: string
      onboarding:
        $ref: '#/definitions/schemas.Onboarding'
      password:
        type: string
      rol:
        type: string
      second_last_name:
        type: string
    type: object
  schemas.User:
    properties:
      email:
        type: string
      first_last_name:
        type: string
      id:
        type: string
      image_url:
        type: string
      memberships:
        items:
          $ref: '#/definitions/schemas.Membership'
        type: array
      name:
        type: string
      onboarding:
        $ref: '#/definitions/schemas.Onboarding'
      password:
        type: string
      rol:
        $ref: '#/definitions/schemas.UserRol'
      second_last_name:
        type: string
    type: object
  schemas.UserRol:
    enum:
    - ADMINISTRATOR
    - CLIENT
    type: string
    x-enum-varnames:
    - UserRolAdmin
    - UserRolClient
  schemas.Users:
    properties:
      users:
        items:
          $ref: '#/definitions/schemas.User'
        type: array
    type: object
info:
  contact: {}
  description: AstroCat API sample for clients
  title: AstroCat API
  version: "1.0"
paths:
  /community/:
    get:
      consumes:
      - application/json
      description: Fetch all communities, filtered by params.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Communities'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch Communities.
      tags:
      - Community
    post:
      consumes:
      - application/json
      description: Create the community information.
      parameters:
      - description: Create Community Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateCommunityRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Community'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create Community.
      tags:
      - Community
  /community/{communityId}/:
    get:
      consumes:
      - application/json
      description: Gets a community given its id.
      parameters:
      - description: Community ID
        in: path
        name: communityId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Community'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Community.
      tags:
      - Community
    patch:
      consumes:
      - application/json
      description: Update the community information.
      parameters:
      - description: Community ID
        in: path
        name: communityId
        required: true
        type: string
      - description: Update Community Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateCommunityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/schemas.Community'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update Community.
      tags:
      - Community
  /community/bulk/:
    post:
      consumes:
      - application/json
      description: Create multiple communities in a single.
      parameters:
      - description: Bulk Create Communities Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.BatchCreateCommunityRequest'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Communities'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Bulk Create Community.
      tags:
      - Community
  /health-check/:
    get:
      consumes:
      - application/json
      description: Verify connection in swagger
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Health Check
      tags:
      - Health Check
  /local/:
    get:
      consumes:
      - application/json
      description: Fetches all locals.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Locals'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch Locals.
      tags:
      - Local
    post:
      consumes:
      - application/json
      description: Create the local information.
      parameters:
      - description: Create Local Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateLocalRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Local'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create Local.
      tags:
      - Local
  /local/{localId}/:
    delete:
      consumes:
      - application/json
      description: Deletes a local given its id.
      parameters:
      - description: Local ID
        in: path
        name: localId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete Local.
      tags:
      - Local
    get:
      consumes:
      - application/json
      description: Gets a local given its id.
      parameters:
      - description: Local ID
        in: path
        name: localId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Local'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Local.
      tags:
      - Local
    patch:
      consumes:
      - application/json
      description: Update the local information.
      parameters:
      - description: Local ID
        in: path
        name: localId
        required: true
        type: string
      - description: Update Local Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateLocalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/schemas.Local'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update Local.
      tags:
      - Local
  /plan/:
    get:
      consumes:
      - application/json
      description: Fetch all plans, filtered by params.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Plans'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch Plans.
      tags:
      - Plan
    post:
      consumes:
      - application/json
      description: Create the plan information.
      parameters:
      - description: Create Plan Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreatePlanRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Plan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create Plan.
      tags:
      - Plan
  /plan/{planId}/:
    delete:
      consumes:
      - application/json
      description: Deletes a plan given its id.
      parameters:
      - description: Plan ID
        in: path
        name: planId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete Plan.
      tags:
      - Plan
    get:
      consumes:
      - application/json
      description: Gets a plan given its id.
      parameters:
      - description: Plan ID
        in: path
        name: planId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Plan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Plan.
      tags:
      - Plan
    patch:
      consumes:
      - application/json
      description: Update the plan information.
      parameters:
      - description: Plan ID
        in: path
        name: planId
        required: true
        type: string
      - description: Update Plan Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdatePlanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/schemas.Plan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update Plan.
      tags:
      - Plan
  /professional/:
    get:
      consumes:
      - application/json
      description: Fetch all professionals, filtered by params.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Professionals'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch Professionals.
      tags:
      - Professional
    post:
      consumes:
      - application/json
      description: Creates a new professional.
      parameters:
      - description: Create Professional Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateProfessionalRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Professional'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create Professional.
      tags:
      - Professional
  /professional/{professionalId}/:
    get:
      consumes:
      - application/json
      description: Gets a professional given its id.
      parameters:
      - description: Professional ID
        in: path
        name: professionalId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Professional'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Professional.
      tags:
      - Professional
    patch:
      consumes:
      - application/json
      description: Updates a professional given its id.
      parameters:
      - description: Professional ID
        in: path
        name: professionalId
        required: true
        type: string
      - description: Update Professional Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateProfessionalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Professional'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update Professional.
      tags:
      - Professional
  /service/:
    get:
      consumes:
      - application/json
      description: Fetch all services, filtered by params.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Services'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch Services.
      tags:
      - Service
    post:
      consumes:
      - application/json
      description: Create the service information.
      parameters:
      - description: Create Service Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateServiceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.Service'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create Service.
      tags:
      - Service
  /service/{serviceId}/:
    get:
      consumes:
      - application/json
      description: Gets a service given its id.
      parameters:
      - description: Service ID
        in: path
        name: serviceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Service'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get Service.
      tags:
      - Service
    patch:
      consumes:
      - application/json
      description: Update the service information.
      parameters:
      - description: Service ID
        in: path
        name: serviceId
        required: true
        type: string
      - description: Update Service Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateServiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/schemas.Service'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update Service.
      tags:
      - Service
  /user/:
    get:
      consumes:
      - application/json
      description: Fetch all users, filtered by params.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Fetch Users.
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Creates a new user.
      parameters:
      - description: Create User Request
        in: body
        name: createUserRequest
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Create User.
      tags:
      - User
  /user/{userId}/:
    delete:
      consumes:
      - application/json
      description: Deletes a user given its id.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Delete User.
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Gets a user given its id.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Get User.
      tags:
      - User
    patch:
      consumes:
      - application/json
      description: Updates a user given its id.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: Update User Request
        in: body
        name: updateUserRequest
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Missing or malformed JWT
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - JWT: []
      summary: Update User.
      tags:
      - User
swagger: "2.0"
