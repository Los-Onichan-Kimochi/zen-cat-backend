// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplateserver = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/community-plan/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all community-plan associations, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityPlan"
                ],
                "summary": "Fetch CommunityPlans.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "planId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityPlans"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Community or Plan does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Associates a community with a plan.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityPlan"
                ],
                "summary": "Create CommunityPlan.",
                "parameters": [
                    {
                        "description": "Community-Plan Association Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateCommunityPlanRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityPlan"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid updatedBy)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Community or Plan does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict (Association already exists)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community-plan/bulk/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates multiple community-plan associations.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityPlan"
                ],
                "summary": "Bulk Create CommunityPlans.",
                "parameters": [
                    {
                        "description": "Bulk Create CommunityPlans Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BatchCreateCommunityPlanRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityPlans"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid updatedBy)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Community or Plan does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict (Association already exists)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community-plan/{communityId}/{planId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieves a specific community-plan association.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityPlan"
                ],
                "summary": "Get CommunityPlan.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityPlan"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Association does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a specific community-plan association.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityPlan"
                ],
                "summary": "Delete CommunityPlan.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Association does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error (e.g., deletion failed)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community-service/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all community-service associations, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityService"
                ],
                "summary": "Fetch CommunityServices.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityServices"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Community or Service does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Associates a community with a service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityService"
                ],
                "summary": "Create CommunityService.",
                "parameters": [
                    {
                        "description": "Community-Service Association Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateCommunityServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityService"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid updatedBy)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Community or Service does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict (Association already exists)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community-service/bulk/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates multiple community-service associations.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityService"
                ],
                "summary": "Bulk Create CommunityServices.",
                "parameters": [
                    {
                        "description": "Bulk Create CommunityServices Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BatchCreateCommunityServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityServices"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid updatedBy)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Community or Service does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict (Association already exists)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community-service/{communityId}/{serviceId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieves a specific community-service association.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityService"
                ],
                "summary": "Get CommunityService.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityService"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Association does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a specific community-service association.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityService"
                ],
                "summary": "Delete CommunityService.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Association does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error (e.g., deletion failed)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all communities, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Fetch Communities.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Communities"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create the community information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Create Community.",
                "parameters": [
                    {
                        "description": "Create Community Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateCommunityRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Community"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community/bulk/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create multiple communities in a single.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Bulk Create Community.",
                "parameters": [
                    {
                        "description": "Bulk Create Communities Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BatchCreateCommunityRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Communities"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community/{communityId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets a community given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get Community.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Community"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a community given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Delete Community.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update the community information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Update Community.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Community Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateCommunityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/schemas.Community"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/health-check/": {
            "get": {
                "description": "Verify connection in swagger",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health Check"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/local/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetches all locals.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local"
                ],
                "summary": "Fetch Locals.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Locals"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create the local information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local"
                ],
                "summary": "Create Local.",
                "parameters": [
                    {
                        "description": "Create Local Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateLocalRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Local"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/local/{localId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets a local given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local"
                ],
                "summary": "Get Local.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Local ID",
                        "name": "localId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Local"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a local given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local"
                ],
                "summary": "Delete Local.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Local ID",
                        "name": "localId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update the local information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local"
                ],
                "summary": "Update Local.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Local ID",
                        "name": "localId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Local Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateLocalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/schemas.Local"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/plan/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all plans, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Fetch Plans.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Plans"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create the plan information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Create Plan.",
                "parameters": [
                    {
                        "description": "Create Plan Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreatePlanRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/plan/{planId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets a plan given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Get Plan.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a plan given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Delete Plan.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update the plan information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Update Plan.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Plan Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdatePlanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/schemas.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/professional/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all professionals, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Professional"
                ],
                "summary": "Fetch Professionals.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Professionals"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates a new professional.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Professional"
                ],
                "summary": "Create Professional.",
                "parameters": [
                    {
                        "description": "Create Professional Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateProfessionalRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Professional"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/professional/{professionalId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets a professional given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Professional"
                ],
                "summary": "Get Professional.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Professional ID",
                        "name": "professionalId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Professional"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a professional given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Professional"
                ],
                "summary": "Delete Professional.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Professional ID",
                        "name": "professionalId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/schemas.Professional"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Updates a professional given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Professional"
                ],
                "summary": "Update Professional.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Professional ID",
                        "name": "professionalId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Professional Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateProfessionalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Professional"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/service/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all services, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Fetch Services.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Services"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create the service information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Create Service.",
                "parameters": [
                    {
                        "description": "Create Service Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/service/{serviceId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets a service given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Get Service.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update the service information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Update Service.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Service Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/schemas.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/user/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all users, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Fetch Users.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Users"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create User.",
                "parameters": [
                    {
                        "description": "Create User Request",
                        "name": "createUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/user/{userId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets a user given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a user given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete User.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Updates a user given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update User Request",
                        "name": "updateUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errors.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.PlanType": {
            "type": "string",
            "enum": [
                "MONTHLY",
                "ANUAL"
            ],
            "x-enum-varnames": [
                "PlanTypeMonthly",
                "PlanTypeAnual"
            ]
        },
        "schemas.BatchCreateCommunityPlanRequest": {
            "type": "object",
            "properties": {
                "community_plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CreateCommunityPlanRequest"
                    }
                }
            }
        },
        "schemas.BatchCreateCommunityRequest": {
            "type": "object",
            "properties": {
                "communities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CreateCommunityRequest"
                    }
                }
            }
        },
        "schemas.BatchCreateCommunityServiceRequest": {
            "type": "object",
            "properties": {
                "community_services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CreateCommunityServiceRequest"
                    }
                }
            }
        },
        "schemas.Communities": {
            "type": "object",
            "properties": {
                "communities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Community"
                    }
                }
            }
        },
        "schemas.Community": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number_subscriptions": {
                    "type": "integer"
                },
                "purpose": {
                    "type": "string"
                }
            }
        },
        "schemas.CommunityPlan": {
            "type": "object",
            "properties": {
                "community_id": {
                    "type": "string"
                },
                "plan_id": {
                    "type": "string"
                }
            }
        },
        "schemas.CommunityPlans": {
            "type": "object",
            "properties": {
                "community_plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CommunityPlan"
                    }
                }
            }
        },
        "schemas.CommunityService": {
            "type": "object",
            "properties": {
                "community_id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                }
            }
        },
        "schemas.CommunityServices": {
            "type": "object",
            "properties": {
                "community_services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CommunityService"
                    }
                }
            }
        },
        "schemas.CreateCommunityPlanRequest": {
            "type": "object",
            "required": [
                "community_id",
                "plan_id"
            ],
            "properties": {
                "community_id": {
                    "type": "string"
                },
                "plan_id": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateCommunityRequest": {
            "type": "object",
            "properties": {
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "purpose": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateCommunityServiceRequest": {
            "type": "object",
            "required": [
                "community_id",
                "service_id"
            ],
            "properties": {
                "community_id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateLocalRequest": {
            "type": "object",
            "properties": {
                "building_number": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer"
                },
                "district": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "local_name": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "street_name": {
                    "type": "string"
                }
            }
        },
        "schemas.CreatePlanRequest": {
            "type": "object",
            "properties": {
                "fee": {
                    "type": "number"
                },
                "reservation_limit": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/model.PlanType"
                }
            }
        },
        "schemas.CreateProfessionalRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_last_name": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "second_last_name": {
                    "type": "string"
                },
                "specialty": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateServiceRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "is_virtual": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_last_name": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "memberships": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Membership"
                    }
                },
                "name": {
                    "type": "string"
                },
                "onboarding": {
                    "$ref": "#/definitions/schemas.Onboarding"
                },
                "password": {
                    "type": "string"
                },
                "rol": {
                    "type": "string"
                },
                "second_last_name": {
                    "type": "string"
                }
            }
        },
        "schemas.IdentificationDocument": {
            "type": "object",
            "properties": {
                "document_number": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "schemas.Local": {
            "type": "object",
            "properties": {
                "building_number": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer"
                },
                "district": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "local_name": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "street_name": {
                    "type": "string"
                }
            }
        },
        "schemas.Locals": {
            "type": "object",
            "properties": {
                "locals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Local"
                    }
                }
            }
        },
        "schemas.Membership": {
            "type": "object",
            "properties": {
                "community": {
                    "$ref": "#/definitions/schemas.Community"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "plan": {
                    "$ref": "#/definitions/schemas.Plan"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/schemas.MembershipStatus"
                }
            }
        },
        "schemas.MembershipStatus": {
            "type": "string",
            "enum": [
                "ACTIVE",
                "EXPIRED",
                "CANCELLED"
            ],
            "x-enum-varnames": [
                "MembershipStatusActive",
                "MembershipStatusExpired",
                "MembershipStatusCancelled"
            ]
        },
        "schemas.Onboarding": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "identification_document": {
                    "$ref": "#/definitions/schemas.IdentificationDocument"
                },
                "phone_number": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                }
            }
        },
        "schemas.Plan": {
            "type": "object",
            "properties": {
                "fee": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "reservation_limit": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/model.PlanType"
                }
            }
        },
        "schemas.Plans": {
            "type": "object",
            "properties": {
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Plan"
                    }
                }
            }
        },
        "schemas.Professional": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_last_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "second_last_name": {
                    "type": "string"
                },
                "specialty": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.Professionals": {
            "type": "object",
            "properties": {
                "professionals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Professional"
                    }
                }
            }
        },
        "schemas.Service": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "is_virtual": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.Services": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Service"
                    }
                }
            }
        },
        "schemas.UpdateCommunityRequest": {
            "type": "object",
            "properties": {
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "purpose": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateLocalRequest": {
            "type": "object",
            "properties": {
                "building_number": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer"
                },
                "district": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "local_name": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "street_name": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdatePlanRequest": {
            "type": "object",
            "properties": {
                "fee": {
                    "type": "number"
                },
                "reservation_limit": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/model.PlanType"
                }
            }
        },
        "schemas.UpdateProfessionalRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_last_name": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "second_last_name": {
                    "type": "string"
                },
                "specialty": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateServiceRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "is_virtual": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_last_name": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "memberships": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Membership"
                    }
                },
                "name": {
                    "type": "string"
                },
                "onboarding": {
                    "$ref": "#/definitions/schemas.Onboarding"
                },
                "password": {
                    "type": "string"
                },
                "rol": {
                    "type": "string"
                },
                "second_last_name": {
                    "type": "string"
                }
            }
        },
        "schemas.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_last_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "memberships": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Membership"
                    }
                },
                "name": {
                    "type": "string"
                },
                "onboarding": {
                    "$ref": "#/definitions/schemas.Onboarding"
                },
                "password": {
                    "type": "string"
                },
                "rol": {
                    "$ref": "#/definitions/schemas.UserRol"
                },
                "second_last_name": {
                    "type": "string"
                }
            }
        },
        "schemas.UserRol": {
            "type": "string",
            "enum": [
                "ADMINISTRATOR",
                "CLIENT"
            ],
            "x-enum-varnames": [
                "UserRolAdmin",
                "UserRolClient"
            ]
        },
        "schemas.Users": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.User"
                    }
                }
            }
        }
    }
}`

// SwaggerInfoserver holds exported Swagger Info so clients can modify it
var SwaggerInfoserver = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "AstroCat API",
	Description:      "AstroCat API sample for clients",
	InfoInstanceName: "server",
	SwaggerTemplate:  docTemplateserver,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfoserver.InstanceName(), SwaggerInfoserver)
}
