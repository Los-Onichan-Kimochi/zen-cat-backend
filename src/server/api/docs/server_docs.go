// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplateserver = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/audit-log/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieve audit logs with optional filtering and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuditLog"
                ],
                "summary": "Get Audit Logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma-separated user IDs",
                        "name": "userIds",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated action types",
                        "name": "actions",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated entity types",
                        "name": "entityTypes",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated user roles",
                        "name": "userRoles",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by success (true/false)",
                        "name": "success",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size (default: 50, max: 200)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.AuditLogs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/audit-log/cleanup/": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete audit logs older than the specified number of days",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuditLog"
                ],
                "summary": "Delete Old Audit Logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Number of days to keep (default: 90)",
                        "name": "days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/audit-log/stats/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieve audit statistics for the specified time period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuditLog"
                ],
                "summary": "Get Audit Statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Number of days to include in stats (default: 30)",
                        "name": "days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.AuditStats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/audit-log/{auditLogId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieve a specific audit log by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AuditLog"
                ],
                "summary": "Get Audit Log by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Audit Log ID",
                        "name": "auditLogId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.AuditLog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/auth/logout/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Logout user session (audit purposes)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/auth/refresh/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Refresh user access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh user access token.",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/schemas.TokenResponse"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community-plan/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all community-plan associations, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityPlan"
                ],
                "summary": "Fetch CommunityPlans.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "planId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityPlans"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Community or Plan does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Associates a community with a plan.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityPlan"
                ],
                "summary": "Create CommunityPlan.",
                "parameters": [
                    {
                        "description": "Community-Plan Association Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateCommunityPlanRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityPlan"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid updatedBy)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Community or Plan does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict (Association already exists)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community-plan/bulk-create/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates multiple community-plan associations.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityPlan"
                ],
                "summary": "Bulk Create CommunityPlans.",
                "parameters": [
                    {
                        "description": "Bulk Create CommunityPlans Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BatchCreateCommunityPlanRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityPlans"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid updatedBy)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Community or Plan does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict (Association already exists)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community-plan/bulk-delete/": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Bulk deletes community-plan associations.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityPlan"
                ],
                "summary": "Bulk Delete CommunityPlans.",
                "parameters": [
                    {
                        "description": "Bulk Delete CommunityPlan Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BulkDeleteCommunityPlanRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community-plan/{communityId}/{planId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieves a specific community-plan association.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityPlan"
                ],
                "summary": "Get CommunityPlan.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityPlan"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Association does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a specific community-plan association.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityPlan"
                ],
                "summary": "Delete CommunityPlan.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Association does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error (e.g., deletion failed)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community-service/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all community-service associations, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityService"
                ],
                "summary": "Fetch CommunityServices.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityServices"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Community or Service does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Associates a community with a service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityService"
                ],
                "summary": "Create CommunityService.",
                "parameters": [
                    {
                        "description": "Community-Service Association Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateCommunityServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityService"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid updatedBy)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Community or Service does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict (Association already exists)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community-service/bulk-create/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates multiple community-service associations.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityService"
                ],
                "summary": "Bulk Create CommunityServices.",
                "parameters": [
                    {
                        "description": "Bulk Create CommunityServices Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BatchCreateCommunityServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityServices"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid updatedBy)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Community or Service does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict (Association already exists)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community-service/bulk-delete/": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Bulk deletes community-service associations.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityService"
                ],
                "summary": "Bulk Delete CommunityServices.",
                "parameters": [
                    {
                        "description": "Bulk Delete CommunityService Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BulkDeleteCommunityServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community-service/id/{id}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieves a community-service association by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityService"
                ],
                "summary": "Get CommunityService By ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityService"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Association does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community-service/{communityId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieves all services that are linked to a given community, based on the community ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityService"
                ],
                "summary": "Get all services associated with a specific community.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (No services associated with the given community ID)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community-service/{communityId}/{serviceId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieves a specific community-service association.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityService"
                ],
                "summary": "Get CommunityService.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityService"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Association does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a specific community-service association.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommunityService"
                ],
                "summary": "Delete CommunityService.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Association does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error (e.g., deletion failed)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all communities, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Fetch Communities.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Communities"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create the community information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Create Community.",
                "parameters": [
                    {
                        "description": "Create Community Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateCommunityRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Community"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community/bulk-create/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create multiple communities in a single.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Bulk Create Community.",
                "parameters": [
                    {
                        "description": "Bulk Create Communities Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BatchCreateCommunityRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Communities"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community/bulk-delete/": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Bulk deletes communities given their ids.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Bulk Delete Communities.",
                "parameters": [
                    {
                        "description": "Bulk Delete Community Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BulkDeleteCommunityRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/schemas.Community"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community/{communityId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets a community given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get Community.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Community"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a community given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Delete Community.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update the community information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Update Community.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Community Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateCommunityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/schemas.Community"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/community/{communityId}/image/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get community information with image bytes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Community"
                ],
                "summary": "Get Community with Image.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CommunityWithImage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/error-log/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieve error logs with optional filtering and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ErrorLog"
                ],
                "summary": "Get Error Logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma-separated user IDs",
                        "name": "userIds",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated action types",
                        "name": "actions",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated entity types",
                        "name": "entityTypes",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated user roles",
                        "name": "userRoles",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size (default: 50, max: 200)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.AuditLogs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/error-log/stats/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieve error statistics for the specified time period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ErrorLog"
                ],
                "summary": "Get Error Statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Number of days to include in stats (default: 30)",
                        "name": "days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.AuditStats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/error-log/{auditLogId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieve a specific error log by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ErrorLog"
                ],
                "summary": "Get Error Log by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Audit Log ID",
                        "name": "auditLogId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.AuditLog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/forgot-password/": {
            "post": {
                "description": "Envía un código de recuperación (PIN) al correo electrónico del usuario",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ForgotPassword"
                ],
                "summary": "Recovery Password",
                "parameters": [
                    {
                        "description": "Email del usuario",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ForgotPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Código enviado exitosamente",
                        "schema": {
                            "$ref": "#/definitions/schemas.ForgotPasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Error al enviar el código",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found - Usuario no encontrado",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity - Formato incorrecto",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/health-check/": {
            "get": {
                "description": "Verify connection in swagger",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health Check"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/local/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetches all locals.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local"
                ],
                "summary": "Fetch Locals.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Locals"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create the local information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local"
                ],
                "summary": "Create Local.",
                "parameters": [
                    {
                        "description": "Create Local Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateLocalRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Local"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/local/bulk-create/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates multiple locals in a batch.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local"
                ],
                "summary": "Bulk Create Locals.",
                "parameters": [
                    {
                        "description": "Bulk Create Locals Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BatchCreateLocalRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Locals"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/local/bulk-delete/": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Bulk delete locals given their ids.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local"
                ],
                "summary": "Bulk Delete Locals.",
                "parameters": [
                    {
                        "description": "Bulk Delete Local Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BulkDeleteLocalRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/local/{localId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets a local given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local"
                ],
                "summary": "Get Local.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Local ID",
                        "name": "localId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Local"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a local given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local"
                ],
                "summary": "Delete Local.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Local ID",
                        "name": "localId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update the local information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Local"
                ],
                "summary": "Update Local.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Local ID",
                        "name": "localId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Local Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateLocalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/schemas.Local"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/login/": {
            "post": {
                "description": "Authenticate user with email and password, returns user info and tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/schemas.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/me/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get current authenticated user information from token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Get Current User Info",
                "responses": {
                    "200": {
                        "description": "User info",
                        "schema": {
                            "$ref": "#/definitions/schemas.UserProfile"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/membership/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all memberships.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Fetch Memberships.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Memberships"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates a new membership.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Create Membership.",
                "parameters": [
                    {
                        "description": "Create Membership Request",
                        "name": "createMembershipRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateMembershipRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Membership"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/membership/community/{communityId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets all memberships for a given community id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Get Memberships by Community ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Memberships"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/membership/community/{communityId}/users": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets all users who have active memberships in a specific community.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Get Users by Community ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Users"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/membership/user/{userId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets all memberships for a given user id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Get Memberships by User ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Memberships"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates a new membership for a specific user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Create Membership for User.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create Membership For User Request",
                        "name": "createMembershipForUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateMembershipForUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Membership"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/membership/user/{userId}/community/{communityId}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets a membership for a given user ID and community ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Get Membership by User ID and Community ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Membership"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/membership/{membershipId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets a membership given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Get Membership by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membershipId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Membership"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a membership given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Delete Membership by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membershipId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Updates a membership given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Update Membership by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membershipId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Membership Request",
                        "name": "updateMembershipRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateMembershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Membership"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/onboarding/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all onboardings.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Onboarding"
                ],
                "summary": "Fetch Onboardings.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Onboardings"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/onboarding/user/{userId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets an onboarding given its user id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Onboarding"
                ],
                "summary": "Get Onboarding by User ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Onboarding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates a new onboarding for a specific user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Onboarding"
                ],
                "summary": "Create Onboarding for User.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create Onboarding Request",
                        "name": "createOnboardingRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateOnboardingRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Onboarding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes an onboarding given its user id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Onboarding"
                ],
                "summary": "Delete Onboarding by User ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Updates an onboarding given its user id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Onboarding"
                ],
                "summary": "Update Onboarding by User ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Onboarding Request",
                        "name": "updateOnboardingRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateOnboardingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Onboarding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/onboarding/{onboardingId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets an onboarding given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Onboarding"
                ],
                "summary": "Get Onboarding by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Onboarding ID",
                        "name": "onboardingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Onboarding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes an onboarding given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Onboarding"
                ],
                "summary": "Delete Onboarding by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Onboarding ID",
                        "name": "onboardingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Updates an onboarding given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Onboarding"
                ],
                "summary": "Update Onboarding by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Onboarding ID",
                        "name": "onboardingId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Onboarding Request",
                        "name": "updateOnboardingRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateOnboardingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Onboarding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/plan/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all plans, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Fetch Plans.",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Plan IDs",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Plans"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create the plan information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Create Plan.",
                "parameters": [
                    {
                        "description": "Create Plan Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreatePlanRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/plan/bulk-create/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates multiple plans in a batch.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Bulk Create Plans.",
                "parameters": [
                    {
                        "description": "Bulk Create Plan Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BulkCreatePlanRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Plans"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/plan/bulk-delete/": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Bulk deletes plans given their ids.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Bulk Delete Plans.",
                "parameters": [
                    {
                        "description": "Bulk Delete Plan Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BulkDeletePlanRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/schemas.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/plan/{planId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets a plan given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Get Plan.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a plan given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Delete Plan.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update the plan information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Update Plan.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Plan Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdatePlanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/schemas.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/professional/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all professionals, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Professional"
                ],
                "summary": "Fetch Professionals.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Professionals"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates a new professional.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Professional"
                ],
                "summary": "Create Professional.",
                "parameters": [
                    {
                        "description": "Create Professional Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateProfessionalRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Professional"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/professional/bulk-create/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates multiple professionals in a batch.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Professional"
                ],
                "summary": "Bulk Create Professionals.",
                "parameters": [
                    {
                        "description": "Bulk Create Professional Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BulkCreateProfessionalRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Professionals"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/professional/bulk-delete/": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Bulk deletes professionals given their ids.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Professional"
                ],
                "summary": "Bulk Delete Professionals.",
                "parameters": [
                    {
                        "description": "Bulk Delete Professional Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BulkDeleteProfessionalRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/schemas.Professional"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/professional/{professionalId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets a professional given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Professional"
                ],
                "summary": "Get Professional.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Professional ID",
                        "name": "professionalId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Professional"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a professional given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Professional"
                ],
                "summary": "Delete Professional.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Professional ID",
                        "name": "professionalId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/schemas.Professional"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Updates a professional given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Professional"
                ],
                "summary": "Update Professional.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Professional ID",
                        "name": "professionalId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Professional Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateProfessionalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Professional"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/register/": {
            "post": {
                "description": "Register a new user with email and password, returns user info and tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "User Registration",
                "parameters": [
                    {
                        "description": "Register Request",
                        "name": "registerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "schema": {
                            "$ref": "#/definitions/schemas.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict - User already exists",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/reports/communities": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Returns aggregated data for community memberships for admin dashboards.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports"
                ],
                "summary": "Get Community Report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Group by (day, week, month)",
                        "name": "groupBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Community report data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin role required",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/reports/services": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Returns aggregated data for service reservations for admin dashboards.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports"
                ],
                "summary": "Get Service Report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Service type (e.g., yoga, citas médicas)",
                        "name": "serviceType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Group by (day, week, month)",
                        "name": "groupBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service report data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin role required",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/reservation/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all reservations, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservation"
                ],
                "summary": "Fetch Reservations.",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "User IDs",
                        "name": "userIds",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Session IDs",
                        "name": "sessionIds",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Reservation States",
                        "name": "states",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Reservations"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create a new reservation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservation"
                ],
                "summary": "Create Reservation.",
                "parameters": [
                    {
                        "description": "Create Reservation Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateReservationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Reservation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/reservation/bulk-delete/": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Bulk delete reservations given their ids.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservation"
                ],
                "summary": "Bulk Delete Reservations.",
                "parameters": [
                    {
                        "description": "Bulk Delete Reservation Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BulkDeleteReservationRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/reservation/{communityId}/{userId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all reservations for a specific community and user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservation"
                ],
                "summary": "Fetch Reservations by Community ID and User ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Community ID",
                        "name": "communityId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Reservations"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/reservation/{reservationId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets a reservation given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservation"
                ],
                "summary": "Get Reservation.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reservation ID",
                        "name": "reservationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Reservation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete a reservation given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservation"
                ],
                "summary": "Delete Reservation.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reservation ID",
                        "name": "reservationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update an existing reservation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservation"
                ],
                "summary": "Update Reservation.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reservation ID",
                        "name": "reservationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Reservation Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateReservationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Reservation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/service-local/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all service-local associations, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceLocal"
                ],
                "summary": "Fetch ServiceLocals.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Local ID",
                        "name": "localId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.ServiceLocals"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Service or Local does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Associates a service with a local.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceLocal"
                ],
                "summary": "Create ServiceLocal.",
                "parameters": [
                    {
                        "description": "Service-Local Association Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateServiceLocalRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.ServiceLocal"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid updatedBy)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Service or Local does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict (Association already exists)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/service-local/bulk/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates multiple service-local associations.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceLocal"
                ],
                "summary": "Bulk Create ServiceLocals.",
                "parameters": [
                    {
                        "description": "Bulk Create ServiceLocals Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BatchCreateServiceLocalRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.ServiceLocals"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid updatedBy)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Service or Local does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict (Association already exists)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Bulk deletes service-local associations.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceLocal"
                ],
                "summary": "Bulk Delete ServiceLocals.",
                "parameters": [
                    {
                        "description": "Bulk Delete ServiceLocal Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BulkDeleteServiceLocalRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/service-local/{serviceId}/{localId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieves a specific service-local association.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceLocal"
                ],
                "summary": "Get ServiceLocal.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Local ID",
                        "name": "localId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.ServiceLocal"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Association does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a specific service-local association.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceLocal"
                ],
                "summary": "Delete ServiceLocal.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Local ID",
                        "name": "localId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Association does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error (e.g., deletion failed)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/service-professional/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all service-professional associations, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceProfessional"
                ],
                "summary": "Fetch ServiceProfessionals.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Professional ID",
                        "name": "professionalId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.ServiceProfessionals"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Service or Professional does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Associates a service with a professional.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceProfessional"
                ],
                "summary": "Create ServiceProfessional.",
                "parameters": [
                    {
                        "description": "Service-Professional Association Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateServiceProfessionalRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.ServiceProfessional"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid updatedBy)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Service or Professional does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict (Association already exists)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/service-professional/bulk/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates multiple service-professional associations.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceProfessional"
                ],
                "summary": "Bulk Create ServiceProfessionals.",
                "parameters": [
                    {
                        "description": "Bulk Create ServiceProfessionals Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BatchCreateServiceProfessionalRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.ServiceProfessionals"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid updatedBy)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Service or Professional does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "409": {
                        "description": "Conflict (Association already exists)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity (Invalid UUIDs or request body)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Bulk deletes service-professional associations.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceProfessional"
                ],
                "summary": "Bulk Delete ServiceProfessionals.",
                "parameters": [
                    {
                        "description": "Bulk Delete ServiceProfessional Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BulkDeleteServiceProfessionalRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/service-professional/{serviceId}/{professionalId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieves a specific service-professional association.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceProfessional"
                ],
                "summary": "Get ServiceProfessional.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Professional ID",
                        "name": "professionalId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.ServiceProfessional"
                        }
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Association does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a specific service-professional association.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServiceProfessional"
                ],
                "summary": "Delete ServiceProfessional.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Professional ID",
                        "name": "professionalId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request (e.g., invalid UUID format)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found (Association does not exist)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error (e.g., deletion failed)",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/service/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all services, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Fetch Services.",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Service IDs",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Services"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create the service information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Create Service.",
                "parameters": [
                    {
                        "description": "Create Service Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/service/bulk-delete/": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Bulk delete services given their ids.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Bulk Delete Services.",
                "parameters": [
                    {
                        "description": "Bulk Delete Service Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BulkDeleteServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/service/{serviceId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets a service given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Get Service.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a service given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Delete Service.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update the service information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service"
                ],
                "summary": "Update Service.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Service Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/schemas.Service"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/session/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all sessions, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Fetch Sessions.",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Professional IDs",
                        "name": "professionalIds",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Local IDs",
                        "name": "localIds",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Community Service IDs",
                        "name": "communityServiceIds",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Session States",
                        "name": "states",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Sessions"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create the session information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Create Session.",
                "parameters": [
                    {
                        "description": "Create Session Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.Session"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/session/availability/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get availability information for a specific date.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Get Day Availability.",
                "parameters": [
                    {
                        "description": "Availability Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.AvailabilityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.AvailabilityResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/session/bulk-delete/": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Bulk deletes sessions given their ids.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Bulk Delete Sessions.",
                "parameters": [
                    {
                        "description": "Bulk Delete Session Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BulkDeleteSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/schemas.Session"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/session/bulk/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create multiple sessions in a single.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Bulk Create Session.",
                "parameters": [
                    {
                        "description": "Bulk Create Sessions Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BatchCreateSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Sessions"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/session/check-conflicts/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Check for time conflicts with existing sessions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Check Session Conflicts.",
                "parameters": [
                    {
                        "description": "Check Conflict Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CheckConflictRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.ConflictResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/session/{sessionId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets a session given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Get Session.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Session"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a session given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Delete Session.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/schemas.Session"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update the session information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Update Session.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Session Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/schemas.Session"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/user/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Fetch all users, filtered by params.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Fetch Users.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Users"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create User.",
                "parameters": [
                    {
                        "description": "Create User Request",
                        "name": "createUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/user/bulk-create/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Bulk creates users.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Bulk Create Users.",
                "parameters": [
                    {
                        "description": "Bulk Create User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BulkCreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/user/bulk-delete/": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Bulk delete users given their ids.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Bulk Delete Users.",
                "parameters": [
                    {
                        "description": "Bulk Delete User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.BulkDeleteUserRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/user/change-password/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Change password with email",
                "parameters": [
                    {
                        "description": "Email and new password",
                        "name": "changePassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ChangePasswordInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/echo.Map"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/user/check-email/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Checks if a user exists with the given email address.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Check User Exists by Email.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CheckUserExistsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/user/stats/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get user statistics including role distribution and recent connections.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User Statistics.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.UserStats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin role required",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/user/{userId}/": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Gets a user given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes a user given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete User.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Updates a user given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update User Request",
                        "name": "updateUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/user/{userId}/role/": {
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Changes the role of a user given its id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Change User Role.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Change Role Request",
                        "name": "changeRoleRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.ChangeUserRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "401": {
                        "description": "Missing or malformed JWT",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin role required",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "echo.Map": {
            "type": "object",
            "additionalProperties": true
        },
        "errors.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.PlanType": {
            "type": "string",
            "enum": [
                "MONTHLY",
                "ANUAL"
            ],
            "x-enum-varnames": [
                "PlanTypeMonthly",
                "PlanTypeAnual"
            ]
        },
        "schemas.ActionStat": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "schemas.AuditActionType": {
            "type": "string",
            "enum": [
                "CREATE",
                "UPDATE",
                "DELETE",
                "BULK_CREATE",
                "BULK_DELETE",
                "LOGIN",
                "LOGOUT",
                "REGISTER",
                "SUBSCRIBE",
                "UNSUBSCRIBE",
                "CREATE_RESERVATION",
                "CANCEL_RESERVATION",
                "UPDATE_PROFILE"
            ],
            "x-enum-varnames": [
                "AuditActionCreate",
                "AuditActionUpdate",
                "AuditActionDelete",
                "AuditActionBulkCreate",
                "AuditActionBulkDelete",
                "AuditActionLogin",
                "AuditActionLogout",
                "AuditActionRegister",
                "AuditActionSubscribe",
                "AuditActionUnsubscribe",
                "AuditActionCreateReservation",
                "AuditActionCancelReservation",
                "AuditActionUpdateProfile"
            ]
        },
        "schemas.AuditEntityType": {
            "type": "string",
            "enum": [
                "USER",
                "COMMUNITY",
                "PROFESSIONAL",
                "LOCAL",
                "PLAN",
                "SERVICE",
                "SESSION",
                "RESERVATION",
                "MEMBERSHIP",
                "ONBOARDING",
                "COMMUNITY_PLAN",
                "COMMUNITY_SERVICE",
                "SERVICE_LOCAL",
                "SERVICE_PROFESSIONAL"
            ],
            "x-enum-varnames": [
                "AuditEntityUser",
                "AuditEntityCommunity",
                "AuditEntityProfessional",
                "AuditEntityLocal",
                "AuditEntityPlan",
                "AuditEntityService",
                "AuditEntitySession",
                "AuditEntityReservation",
                "AuditEntityMembership",
                "AuditEntityOnboarding",
                "AuditEntityCommunityPlan",
                "AuditEntityCommunityService",
                "AuditEntityServiceLocal",
                "AuditEntityServiceProfessional"
            ]
        },
        "schemas.AuditLog": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/schemas.AuditActionType"
                },
                "additional_info": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_name": {
                    "type": "string"
                },
                "entity_type": {
                    "$ref": "#/definitions/schemas.AuditEntityType"
                },
                "error_message": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "new_values": {
                    "type": "string"
                },
                "old_values": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/schemas.UserProfile"
                },
                "user_agent": {
                    "type": "string"
                },
                "user_email": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "user_role": {
                    "$ref": "#/definitions/schemas.UserRol"
                }
            }
        },
        "schemas.AuditLogs": {
            "type": "object",
            "properties": {
                "audit_logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.AuditLog"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "schemas.AuditStats": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.ActionStat"
                    }
                },
                "active_users": {
                    "type": "integer"
                },
                "entity_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.EntityTypeStat"
                    }
                },
                "failure_count": {
                    "type": "integer"
                },
                "success_count": {
                    "type": "integer"
                },
                "total_events": {
                    "type": "integer"
                },
                "user_roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.UserRoleStat"
                    }
                }
            }
        },
        "schemas.AvailabilityRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "local_id": {
                    "type": "string"
                },
                "professional_id": {
                    "type": "string"
                }
            }
        },
        "schemas.AvailabilityResult": {
            "type": "object",
            "properties": {
                "busy_slots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.TimeSlot"
                    }
                },
                "is_available": {
                    "type": "boolean"
                }
            }
        },
        "schemas.BatchCreateCommunityPlanRequest": {
            "type": "object",
            "properties": {
                "community_plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CreateCommunityPlanRequest"
                    }
                }
            }
        },
        "schemas.BatchCreateCommunityRequest": {
            "type": "object",
            "properties": {
                "communities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CreateCommunityRequest"
                    }
                }
            }
        },
        "schemas.BatchCreateCommunityServiceRequest": {
            "type": "object",
            "properties": {
                "community_services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CreateCommunityServiceRequest"
                    }
                }
            }
        },
        "schemas.BatchCreateLocalRequest": {
            "type": "object",
            "properties": {
                "locals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CreateLocalRequest"
                    }
                }
            }
        },
        "schemas.BatchCreateServiceLocalRequest": {
            "type": "object",
            "properties": {
                "service_locals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CreateServiceLocalRequest"
                    }
                }
            }
        },
        "schemas.BatchCreateServiceProfessionalRequest": {
            "type": "object",
            "properties": {
                "service_professionals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CreateServiceProfessionalRequest"
                    }
                }
            }
        },
        "schemas.BatchCreateSessionRequest": {
            "type": "object",
            "properties": {
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CreateSessionRequest"
                    }
                }
            }
        },
        "schemas.BulkCreatePlanRequest": {
            "type": "object",
            "properties": {
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CreatePlanRequest"
                    }
                }
            }
        },
        "schemas.BulkCreateProfessionalRequest": {
            "type": "object",
            "properties": {
                "professionals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CreateProfessionalRequest"
                    }
                }
            }
        },
        "schemas.BulkCreateUserRequest": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CreateUserRequest"
                    }
                }
            }
        },
        "schemas.BulkDeleteCommunityPlanRequest": {
            "type": "object",
            "properties": {
                "community_plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.DeleteCommunityPlanRequest"
                    }
                }
            }
        },
        "schemas.BulkDeleteCommunityRequest": {
            "type": "object",
            "properties": {
                "communities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "schemas.BulkDeleteCommunityServiceRequest": {
            "type": "object",
            "properties": {
                "community_services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.DeleteCommunityServiceRequest"
                    }
                }
            }
        },
        "schemas.BulkDeleteLocalRequest": {
            "type": "object",
            "properties": {
                "locals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "schemas.BulkDeletePlanRequest": {
            "type": "object",
            "properties": {
                "plans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "schemas.BulkDeleteProfessionalRequest": {
            "type": "object",
            "properties": {
                "professionals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "schemas.BulkDeleteReservationRequest": {
            "type": "object",
            "properties": {
                "reservations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "schemas.BulkDeleteServiceLocalRequest": {
            "type": "object",
            "properties": {
                "service_locals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.DeleteServiceLocalRequest"
                    }
                }
            }
        },
        "schemas.BulkDeleteServiceProfessionalRequest": {
            "type": "object",
            "properties": {
                "service_professionals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.DeleteServiceProfessionalRequest"
                    }
                }
            }
        },
        "schemas.BulkDeleteServiceRequest": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "schemas.BulkDeleteSessionRequest": {
            "type": "object",
            "properties": {
                "sessions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "schemas.BulkDeleteUserRequest": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "schemas.ChangePasswordInput": {
            "type": "object",
            "required": [
                "email",
                "new_password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                }
            }
        },
        "schemas.ChangeUserRoleRequest": {
            "type": "object",
            "properties": {
                "rol": {
                    "$ref": "#/definitions/schemas.UserRol"
                }
            }
        },
        "schemas.CheckConflictRequest": {
            "type": "object",
            "properties": {
                "community_service_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "exclude_id": {
                    "type": "string"
                },
                "local_id": {
                    "type": "string"
                },
                "professional_id": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "schemas.CheckUserExistsResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "exists": {
                    "type": "boolean"
                }
            }
        },
        "schemas.Communities": {
            "type": "object",
            "properties": {
                "communities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Community"
                    }
                }
            }
        },
        "schemas.Community": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number_subscriptions": {
                    "type": "integer"
                },
                "purpose": {
                    "type": "string"
                }
            }
        },
        "schemas.CommunityPlan": {
            "type": "object",
            "properties": {
                "community_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "plan_id": {
                    "type": "string"
                }
            }
        },
        "schemas.CommunityPlans": {
            "type": "object",
            "properties": {
                "community_plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CommunityPlan"
                    }
                }
            }
        },
        "schemas.CommunityService": {
            "type": "object",
            "properties": {
                "community_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                }
            }
        },
        "schemas.CommunityServices": {
            "type": "object",
            "properties": {
                "community_services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.CommunityService"
                    }
                }
            }
        },
        "schemas.CommunityWithImage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "image_bytes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number_subscriptions": {
                    "type": "integer"
                },
                "purpose": {
                    "type": "string"
                }
            }
        },
        "schemas.ConflictResult": {
            "type": "object",
            "properties": {
                "has_conflict": {
                    "type": "boolean"
                },
                "local_conflicts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Session"
                    }
                },
                "professional_conflicts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Session"
                    }
                }
            }
        },
        "schemas.CreateCommunityPlanRequest": {
            "type": "object",
            "required": [
                "community_id",
                "plan_id"
            ],
            "properties": {
                "community_id": {
                    "type": "string"
                },
                "plan_id": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateCommunityRequest": {
            "type": "object",
            "properties": {
                "image_bytes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "purpose": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateCommunityServiceRequest": {
            "type": "object",
            "required": [
                "community_id",
                "service_id"
            ],
            "properties": {
                "community_id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateLocalRequest": {
            "type": "object",
            "properties": {
                "building_number": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer"
                },
                "district": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "local_name": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "street_name": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateMembershipForUserRequest": {
            "type": "object",
            "properties": {
                "community_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "plan_id": {
                    "type": "string"
                },
                "reservations_used": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/schemas.MembershipStatus"
                }
            }
        },
        "schemas.CreateMembershipRequest": {
            "type": "object",
            "properties": {
                "community_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "plan_id": {
                    "type": "string"
                },
                "reservations_used": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/schemas.MembershipStatus"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateOnboardingRequest": {
            "type": "object",
            "required": [
                "address",
                "document_number",
                "document_type",
                "phone_number",
                "postal_code"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "birth_date": {
                    "description": "Datos personales adicionales",
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "document_number": {
                    "type": "string"
                },
                "document_type": {
                    "description": "Documento",
                    "allOf": [
                        {
                            "$ref": "#/definitions/schemas.DocumentType"
                        }
                    ]
                },
                "gender": {
                    "$ref": "#/definitions/schemas.Gender"
                },
                "phone_number": {
                    "description": "Contacto",
                    "type": "string"
                },
                "postal_code": {
                    "description": "Dirección",
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            }
        },
        "schemas.CreatePlanRequest": {
            "type": "object",
            "properties": {
                "fee": {
                    "type": "number"
                },
                "reservation_limit": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/model.PlanType"
                }
            }
        },
        "schemas.CreateProfessionalRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_last_name": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "second_last_name": {
                    "type": "string"
                },
                "specialty": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateReservationRequest": {
            "type": "object",
            "properties": {
                "membership_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reservation_time": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateServiceLocalRequest": {
            "type": "object",
            "required": [
                "local_id",
                "service_id"
            ],
            "properties": {
                "local_id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateServiceProfessionalRequest": {
            "type": "object",
            "required": [
                "professional_id",
                "service_id"
            ],
            "properties": {
                "professional_id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateServiceRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "is_virtual": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateSessionRequest": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "community_service_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "local_id": {
                    "type": "string"
                },
                "professional_id": {
                    "type": "string"
                },
                "session_link": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_last_name": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "memberships": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Membership"
                    }
                },
                "name": {
                    "type": "string"
                },
                "onboarding": {
                    "$ref": "#/definitions/schemas.Onboarding"
                },
                "password": {
                    "type": "string"
                },
                "rol": {
                    "type": "string"
                },
                "second_last_name": {
                    "type": "string"
                }
            }
        },
        "schemas.DeleteCommunityPlanRequest": {
            "type": "object",
            "required": [
                "community_id",
                "plan_id"
            ],
            "properties": {
                "community_id": {
                    "type": "string"
                },
                "plan_id": {
                    "type": "string"
                }
            }
        },
        "schemas.DeleteCommunityServiceRequest": {
            "type": "object",
            "required": [
                "community_id",
                "service_id"
            ],
            "properties": {
                "community_id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                }
            }
        },
        "schemas.DeleteServiceLocalRequest": {
            "type": "object",
            "required": [
                "local_id",
                "service_id"
            ],
            "properties": {
                "local_id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                }
            }
        },
        "schemas.DeleteServiceProfessionalRequest": {
            "type": "object",
            "required": [
                "professional_id",
                "service_id"
            ],
            "properties": {
                "professional_id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                }
            }
        },
        "schemas.DocumentType": {
            "type": "string",
            "enum": [
                "DNI",
                "FOREIGNER_CARD",
                "PASSPORT"
            ],
            "x-enum-varnames": [
                "DocumentTypeDNI",
                "DocumentTypeForeignerCard",
                "DocumentTypePassport"
            ]
        },
        "schemas.EntityTypeStat": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "entity_type": {
                    "type": "string"
                }
            }
        },
        "schemas.ForgotPasswordRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "schemas.ForgotPasswordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                }
            }
        },
        "schemas.Gender": {
            "type": "string",
            "enum": [
                "MALE",
                "FEMALE",
                "OTHER"
            ],
            "x-enum-varnames": [
                "GenderMale",
                "GenderFemale",
                "GenderOther"
            ]
        },
        "schemas.Local": {
            "type": "object",
            "properties": {
                "building_number": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer"
                },
                "district": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "local_name": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "street_name": {
                    "type": "string"
                }
            }
        },
        "schemas.Locals": {
            "type": "object",
            "properties": {
                "locals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Local"
                    }
                }
            }
        },
        "schemas.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "schemas.LoginResponse": {
            "type": "object",
            "properties": {
                "tokens": {
                    "$ref": "#/definitions/schemas.TokenResponse"
                },
                "user": {
                    "$ref": "#/definitions/schemas.UserProfile"
                }
            }
        },
        "schemas.Membership": {
            "type": "object",
            "properties": {
                "community": {
                    "$ref": "#/definitions/schemas.Community"
                },
                "community_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "plan": {
                    "$ref": "#/definitions/schemas.Plan"
                },
                "plan_id": {
                    "type": "string"
                },
                "reservations_used": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/schemas.MembershipStatus"
                },
                "user": {
                    "$ref": "#/definitions/schemas.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "schemas.MembershipStatus": {
            "type": "string",
            "enum": [
                "ACTIVE",
                "EXPIRED",
                "CANCELLED",
                "ON_HOLD"
            ],
            "x-enum-varnames": [
                "MembershipStatusActive",
                "MembershipStatusExpired",
                "MembershipStatusCancelled",
                "MembershipStatusOnHold"
            ]
        },
        "schemas.Memberships": {
            "type": "object",
            "properties": {
                "memberships": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Membership"
                    }
                }
            }
        },
        "schemas.Onboarding": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "birth_date": {
                    "description": "Datos personales adicionales",
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "document_number": {
                    "type": "string"
                },
                "document_type": {
                    "description": "Documento",
                    "allOf": [
                        {
                            "$ref": "#/definitions/schemas.DocumentType"
                        }
                    ]
                },
                "gender": {
                    "$ref": "#/definitions/schemas.Gender"
                },
                "id": {
                    "type": "string"
                },
                "phone_number": {
                    "description": "Contacto",
                    "type": "string"
                },
                "postal_code": {
                    "description": "Dirección",
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "schemas.Onboardings": {
            "type": "object",
            "properties": {
                "onboardings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Onboarding"
                    }
                }
            }
        },
        "schemas.Plan": {
            "type": "object",
            "properties": {
                "fee": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "reservation_limit": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/model.PlanType"
                }
            }
        },
        "schemas.Plans": {
            "type": "object",
            "properties": {
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Plan"
                    }
                }
            }
        },
        "schemas.Professional": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_last_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "second_last_name": {
                    "type": "string"
                },
                "specialty": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.Professionals": {
            "type": "object",
            "properties": {
                "professionals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Professional"
                    }
                }
            }
        },
        "schemas.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "first_last_name",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_last_name": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "second_last_name": {
                    "type": "string"
                }
            }
        },
        "schemas.Reservation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "last_modification": {
                    "type": "string"
                },
                "membership_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reservation_time": {
                    "type": "string"
                },
                "session": {
                    "$ref": "#/definitions/schemas.Session"
                },
                "session_id": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "schemas.Reservations": {
            "type": "object",
            "properties": {
                "reservations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Reservation"
                    }
                }
            }
        },
        "schemas.Service": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "is_virtual": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.ServiceLocal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "local_id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                }
            }
        },
        "schemas.ServiceLocals": {
            "type": "object",
            "properties": {
                "service_locals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.ServiceLocal"
                    }
                }
            }
        },
        "schemas.ServiceProfessional": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "professional_id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                }
            }
        },
        "schemas.ServiceProfessionals": {
            "type": "object",
            "properties": {
                "service_professionals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.ServiceProfessional"
                    }
                }
            }
        },
        "schemas.Services": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Service"
                    }
                }
            }
        },
        "schemas.Session": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "community_service_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "local_id": {
                    "type": "string"
                },
                "professional_id": {
                    "type": "string"
                },
                "registered_count": {
                    "type": "integer"
                },
                "session_link": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "schemas.Sessions": {
            "type": "object",
            "properties": {
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Session"
                    }
                }
            }
        },
        "schemas.TimeSlot": {
            "type": "object",
            "properties": {
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "description": "\"professional\" | \"local\"",
                    "type": "string"
                }
            }
        },
        "schemas.TokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "$ref": "#/definitions/time.Duration"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateCommunityRequest": {
            "type": "object",
            "properties": {
                "image_bytes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "purpose": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateLocalRequest": {
            "type": "object",
            "properties": {
                "building_number": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer"
                },
                "district": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "local_name": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "street_name": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateMembershipRequest": {
            "type": "object",
            "properties": {
                "community_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "plan_id": {
                    "type": "string"
                },
                "reservations_used": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/schemas.MembershipStatus"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateOnboardingRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "birth_date": {
                    "description": "Datos personales adicionales",
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "document_number": {
                    "type": "string"
                },
                "document_type": {
                    "description": "Documento",
                    "allOf": [
                        {
                            "$ref": "#/definitions/schemas.DocumentType"
                        }
                    ]
                },
                "gender": {
                    "$ref": "#/definitions/schemas.Gender"
                },
                "phone_number": {
                    "description": "Contacto",
                    "type": "string"
                },
                "postal_code": {
                    "description": "Dirección",
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdatePlanRequest": {
            "type": "object",
            "properties": {
                "fee": {
                    "type": "number"
                },
                "reservation_limit": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/model.PlanType"
                }
            }
        },
        "schemas.UpdateProfessionalRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_last_name": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "second_last_name": {
                    "type": "string"
                },
                "specialty": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateReservationRequest": {
            "type": "object",
            "properties": {
                "membership_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reservation_time": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateServiceRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "is_virtual": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateSessionRequest": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "community_service_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "local_id": {
                    "type": "string"
                },
                "professional_id": {
                    "type": "string"
                },
                "registered_count": {
                    "type": "integer"
                },
                "session_link": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_last_name": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "memberships": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Membership"
                    }
                },
                "name": {
                    "type": "string"
                },
                "onboarding": {
                    "$ref": "#/definitions/schemas.Onboarding"
                },
                "password": {
                    "type": "string"
                },
                "rol": {
                    "type": "string"
                },
                "second_last_name": {
                    "type": "string"
                }
            }
        },
        "schemas.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_last_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "memberships": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Membership"
                    }
                },
                "name": {
                    "type": "string"
                },
                "onboarding": {
                    "$ref": "#/definitions/schemas.Onboarding"
                },
                "password": {
                    "type": "string"
                },
                "rol": {
                    "$ref": "#/definitions/schemas.UserRol"
                },
                "second_last_name": {
                    "type": "string"
                }
            }
        },
        "schemas.UserConnection": {
            "type": "object",
            "properties": {
                "connection_ip": {
                    "type": "string"
                },
                "last_login": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/schemas.UserRol"
                },
                "user_email": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "schemas.UserProfile": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_last_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rol": {
                    "$ref": "#/definitions/schemas.UserRol"
                },
                "second_last_name": {
                    "type": "string"
                }
            }
        },
        "schemas.UserRol": {
            "type": "string",
            "enum": [
                "ADMINISTRATOR",
                "CLIENT",
                "GUEST"
            ],
            "x-enum-varnames": [
                "UserRolAdmin",
                "UserRolClient",
                "UserRolGuest"
            ]
        },
        "schemas.UserRoleDistribution": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "role": {
                    "$ref": "#/definitions/schemas.UserRol"
                }
            }
        },
        "schemas.UserRoleStat": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "user_role": {
                    "type": "string"
                }
            }
        },
        "schemas.UserStats": {
            "type": "object",
            "properties": {
                "admin_count": {
                    "type": "integer"
                },
                "client_count": {
                    "type": "integer"
                },
                "guest_count": {
                    "type": "integer"
                },
                "recent_connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.UserConnection"
                    }
                },
                "role_distribution": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.UserRoleDistribution"
                    }
                },
                "total_users": {
                    "type": "integer"
                }
            }
        },
        "schemas.Users": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.User"
                    }
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        }
    }
}`

// SwaggerInfoserver holds exported Swagger Info so clients can modify it
var SwaggerInfoserver = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "AstroCat API",
	Description:      "AstroCat API sample for clients",
	InfoInstanceName: "server",
	SwaggerTemplate:  docTemplateserver,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfoserver.InstanceName(), SwaggerInfoserver)
}
